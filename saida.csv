"Status","Comment"
"Not SATD","for more rules see: https://commitlint.js.org/#/reference-rules"
"Not SATD","parserPreset: 'conventional-changelog-atom',"
"Not SATD"," rules: { 'type-enum': [2, 'always', ['foo']], },"
"Not SATD","eslint-env es6"
"Not SATD","Resolve and load @commitlint/config-conventional from node_modules.* Referenced packages must be installed"
"Not SATD","Resolve and load conventional-changelog-atom from node_modules.* Referenced packages must be installed"
"Not SATD","Resolve and load @commitlint/format from node_modules.* Referenced package must be installed"
"Not SATD","Any rules defined here will override rules from @commitlint/config-conventional"
"Not SATD","Functions that return true if commitlint should ignore the given message."
"Not SATD","Whether commitlint uses the default ignore rules."
"Not SATD","Custom URL to show upon failure"
"Not SATD","Custom prompt configs"
"Not SATD","pre-commit==2.19.0gitlint==0.17.0"
"Not SATD","!/usr/bin/env bash"
"Not SATD","/../}"") # add ../ to each element"
"Not SATD","--ignore-unknown prevents prettier from complaining about file types it doesn't know about"
"Not SATD","!/usr/bin/env bash"
"Not SATD","/../}"") # add ../ to each element"
"Not SATD","gets the list of modified files via git diff, and removes the schema/deploy prefix, and the .sql suffix to match the sqitch plan change name"
"Not SATD","finds the last tag in the sqitch plan in the base branch"
"Not SATD","reads the sqitch.plan from the end and stops at the last tag that was on the base branch"
"Not SATD"," !/usr/bin/env bash We consider any sqitch change prior to a tag to be immutable, as it may already be released to production, and should not be reverted This script checks whether those changes were modified in the current dir since the base branch and returns an error if that is the case usage: sqitch-immutable-files.sh schema_dir base_branch"
"Not SATD"," comm compares two ordered files and returns three columns ""-23"" suppresses colums 2 and 3, so it only returns the first column (the lines unique to file 1)"
"Not SATD","!/usr/bin/env bash"
"Not SATD"," Usage sqitch-last-change-is-tag.sh path/to/schema/dir tests if the last change of the sqitch plan file is a tag"
"Not SATD"," ""react/prop-types"": 0, // don't need react/prop-types when components are typed with typescript ""react/state-in-constructor"": [1, ""never""], ""@typescript-eslint/no-unused-expressions"": [1, { allowTernary: true }], ""import/prefer-default-export"": 0, ""no-plusplus"": 0, // not sure why this would be needed when we require semicolons ""jsx-a11y/anchor-is-valid"": 0, // Next.js's Link component inject the href in our <a> elements ""no-restricted-syntax"": 0, ""import/no-extraneous-dependencies"": [ ""error"", { devDependencies: [""tests/**/*"", ""cypress/**/*""] }, ],"
"Not SATD"," ""global-require"": 0, ""no-underscore-dangle"": 0, ""no-undef"": 0, // This is covered by Typescript, no need for eslint to check that"
"Not SATD"," // Rules below are code style. Prettier should deal with that instead of eslint ""spaced-comment"": 0, ""import/newline-after-import"": 0, ""import/order"": 0, ""@typescript-eslint/lines-between-class-members"": 0, we are not using flow,"
"Not SATD",""", ""cypress"
"SATD",""
"SATD",""
"Not SATD","allows functions to be called with null arguments"
"Not SATD","load values from .env"
"Not SATD","renamed from ENABLE_DB_MOCKS"
"Not SATD","In case default host is used with non-default port"
"SATD","eslint-disable-next-line import/no-extraneous-dependencies"
"Not SATD","eslint-disable-next-line import/extensions"
"Not SATD"," We've imported your old cypress plugins here. You may want to clean this up later by importing these."
"Not SATD"," / <reference types=""next"" /> / <reference types=""next/image-types/global"" />"
"Not SATD"," NOTE: This file should not be edited see https://nextjs.org/docs/basic-features/typescript for more information."
"Not SATD"," Set to false to create a sentry release on build with the sentry CLI This will upload sourcemaps to sentry."
"Not SATD"," This file configures the initialization of Sentry on the browser. The config you add here will be used whenever a page is visited. https://docs.sentry.io/platforms/javascript/guides/nextjs/"
"Not SATD"," This file configures the initialization of Sentry on the server. The config you add here will be used whenever the server handles a request. https://docs.sentry.io/platforms/javascript/guides/nextjs/"
"Not SATD","hide the submit button"
"Not SATD","This is to keep compatibility with the progressive rendering"
"Not SATD","For when redirected from project revision"
"Not SATD","Based on router queries we can determine if the user is coming from project contact form"
"Not SATD","If we don't have the projectContactFormId(means we don't have the primary contact form either) we need to create one"
"Not SATD","If we don't have the projectContactFormId(means we don't have the primary contact form either) we need to create one"
"Not SATD"," Invalidate the entire store, to make sure that we don't display any stale data after redirecting to the next page. This could be optimized to only invalidate the affected records."
"Not SATD","comparing today with TEIMP end date"
"Not SATD","@ts-ignore"
"Not SATD"," only run the effect on mount eslint-disable-next-line react-hooks/exhaustive-deps"
"Not SATD","Function to create a new contact form change and redirect to it"
"Not SATD","Get all form changes ids to get used in the undo changes button"
"Not SATD","Show diff if it is not the first revision and not view only (rendered from the annual reports page)"
"Not SATD","If we are showing the diff then we want to see archived records, otherwise filter out the archived reports"
"Not SATD","Sorting the annual report form changes by the reporting requirement index"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","Show this part if none of Annual report form properties have been updated"
"Not SATD","Show this part if the whole Annual report has been removed"
"Not SATD","You only need to include the optional arguments when using this function to create the schema for the summary (read-only) page."
"Not SATD","This function aims to prevent race condition for the if-else statement below"
"Not SATD","Create primary contact when adding new secondary contact to the project if there is no primary contact"
"Not SATD","the failing mutation will display an error message and send the error to sentry"
"Not SATD","Get all form changes ids to get used in the undo changes button"
"Not SATD","allForms is already sorted by contactIndex"
"Not SATD","if the primary contact not yet added, we pass 2 as the contactIndex and create the primary contact in the addContact function"
"Not SATD"," Will remove the primary contact form change if it is not filled out and we have only one secondary contact form Also, using the undoFormChanges mutation won't work here because it will bring back the primary contact form change"
"Not SATD","Using short circuit doesn't work here, It renders a useless submit button"
"Not SATD","Using short circuit doesn't work here, It renders a useless submit button"
"Not SATD","Show diff if it is not the first revision and not view only (rendered from the contacts page)"
"Not SATD","If we are showing the diff then we want to see archived records, otherwise filter out the archived contacts"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","we need to check previous value since this form and the project managers form are rendered under same CollapsibleFormWidget"
"Not SATD","setting this to true so that the text is ""Secondary Contacts not added"""
"Not SATD","passing content suffix to fields that need nominator and denominator (example: tCO2e/GJ)"
"Not SATD","setting a deep copy of the ui schema to avoid mutating the original"
"Not SATD","Example: tCO2e/GJ if we have emissionFunctionalUnit"
"Not SATD","We only show the label of this field on view mode and summary page"
"Not SATD","Mutations"
"Not SATD","Restructure form data to be in the same format as the schema"
"Not SATD","don't trigger a change if the form data is an empty object"
"Not SATD","Expand TEIMP reporting and Upon Completion data to the top level of the form data"
"Not SATD","We need to set the ui:FieldTemplate to the EmptyFieldTemplate* and ui:ObjectFieldTemplate to the EmptyObjectFieldTemplate* to avoid showing field labels and outlines on parent object.* There is room for improvement on how this is done* but for now it is the best solution."
"Not SATD","We should ideally offload the parsing of this data to a custom commit handler on the database.* Opportunity for future tech debt work captured in ZenHub."
"Not SATD","Show diff if it is not the first revision and not view only (rendered from the overview page)"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","Set custom rjsf fields to display diffs"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","Growthbook - teimp"
"Not SATD","Show this part if none of the emission intensity report form properties have been updated"
"Not SATD","Show this part if the whole emission intensity report has been removed"
"Not SATD","You only need to include the optional arguments when using this function to create the schema for the summary (read-only) page."
"Not SATD","Show diff if it is not the first revision and not view only (rendered from the overview page)"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","Set custom rjsf fields to display diffs"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","Mutations"
"Not SATD","We should explicitly filter out archived form changes here (filtering on the fragment doesn't work)"
"Not SATD","putting the conditional directly in the mutation throws errors"
"Not SATD","don't trigger a change if the form data is an empty object"
"Not SATD","Get all form changes ids to get used in the undo changes button"
"Not SATD"," Default to 50% Default to 10%"
"Not SATD","Set custom rjsf fields to display diffs"
"Not SATD","Show diff if it is not the first revision and not view only (rendered from the overview page)"
"Not SATD","If we are showing the diff then we want to see archived records, otherwise filter out the archived contacts"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","This condition handles the case where the form is archived"
"Not SATD","setting this to true so that the text is ""Additional Funding Source not added"""
"Not SATD","You only need to include the optional arguments when using this function to create the schema for the summary (read-only) page."
"Not SATD","Dynamically build the schema from the list of cif_users"
"Not SATD","Update an existing project_manager form change if it exists, otherwise create one"
"Not SATD","If a form_change already exists, and the payload contains a cifUserId update it"
"Not SATD","If a form_change does not exist, and the payload contains a cifUserId create a form_change record"
"Not SATD","a temporary fix to make sure the form change operation is set correctly"
"Not SATD","the failing mutation will display an error message and send the error to sentry"
"Not SATD","Get all form changes ids to get used in the undo changes button"
"Not SATD","Show diff if it is not the first revision and not view only (rendered from the managers page)"
"Not SATD","If we are showing the diff then we want to see archived records, otherwise filter out the archived managers"
"Not SATD","Set custom rjsf fields to display diffs"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","Opportunity for a refactor here to populate the anyOf array on the server with a computed column"
"Not SATD","Get all form changes ids to get used in the undo changes button"
"Not SATD","retrieving calculated amounts from newFormData rather than using the calculated fields directly to avoid discrepencies between front-end and payments table"
"Not SATD","Sort consolidated milestone form change records"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","setting this to true so that the text is ""Milestone Reports not added"""
"Not SATD"," If we are showing the diff then we want to see archived records, otherwise filter out the archived milestone reports"
"Not SATD","Show this part if none of milestone report form properties have been updated"
"Not SATD","Show this part if the whole milestone report has been removed"
"Not SATD","Get all form changes ids to get used in the undo changes button"
"Not SATD","Set custom rjsf fields to display diffs"
"Not SATD","Show diff if it is not the first revision and not view only (rendered from the quarterly report page)"
"Not SATD","If we are showing the diff then we want to see archived records, otherwise filter out the archived quarterly reports"
"Not SATD","Sorting the quarterly report form changes by the reporting requirement index"
"Not SATD","Defines if all quarterly reports are pristine"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","Update the hasDiff state in the CollapsibleFormWidget to define if the form has diffs to show"
"Not SATD","setting this to true so that the text is ""Quarterly Reports not added"""
"Not SATD","Show this part if none of the quarterly reports' form properties have been updated"
"Not SATD","Show this part if the whole quarterly report has been removed"
"Not SATD","mutations"
"Not SATD","Show diff if it is not the first revision and the view only"
"Not SATD","Set custom rjsf fields to display diffs"
"Not SATD","Set the formSchema and formData based on showing the diff or not"
"Not SATD","todo: not displaying when reviewing changes"
"Not SATD","This file contains the common components used in the different form summary pages.* FormRemoved: is used to show a message when a form has been removed and it shows different styles depending on the page.* FormNotAddedOrUpdated: is used to show a message when a form has not been added or updated depending on wether it is the first revision or not."
"Not SATD","No need to show `removed` on Amendments/Revisions page"
"Not SATD","schema dependencies"
"Not SATD","Specific filter function for the milestone schema that*  - flattens the existing schema*  - removes the properties not in the form change data*  - returns the pruned, flat schema and only the form change data that changed since the previous version** @param formSchema* @param formChange* @returns {{formSchema: JSONSchema7, formData: any}}"
"Not SATD","the failing mutation will display an error message and send the error to sentry"
"Not SATD","These generic functions are for use in the ProjectMilestoneReportForm, ProjectQuarterlyReportForm and ProjectAnnualReportForm components.* The report forms all need to handle CRUD operations for reporting_requirement form_change records in an identical way.* Staging the forms before submit and sorting the forms by index are also shared functionality of these components."
"Not SATD","Deprecated - When refactoring forms, we should use the * `stageMultipleReportingRequirementFormChange` function instead"
"Not SATD","The mutation used here is dependent on whether a reportType is passed in.If a reportType is passed, we use the default mutationFn parameter. If not, we use the optional parameter updateFormChangeMutationFnto handle staging. Doing this allows us to stage all dependent form_change records for a report together & definehow to update each those form_change records."
"Not SATD","@param formChangeEdges the edges, containing nodes of graphQL type FormChange* @param keepArchivedReports if set to true, archived reports won't be pruned (for summary displays)* @returns a tuple containing the reports sorted by reportingRequirementIndex, and the next index available"
"Not SATD","the failing mutation will display an error message and send the error to sentry"
"Not SATD","This is the redirect call passed from the NextJS form index page"
"Not SATD","We don't want a front end navigation here,to ensure that a back-end redirect is performed when clicking on the banner image"
"Not SATD","eslint-disable react/no-danger"
"Not SATD","eslint-enable react/no-danger"
"Not SATD","Current date without time information"
"Not SATD","This has to be true to start with, otherwise it will prevent the children from rendering"
"Not SATD","need the specificity to override the default"
"Not SATD","eslint-disable relay/must-colocate-fragment-spreads"
"Not SATD","controlling form data like this is necessary because of this bug: https://github.com/rjsf-team/react-jsonschema-form/issues/1023"
"Not SATD","Custom widget to update the revision status"
"Not SATD","helper function to compare the initial value to the current value"
"Not SATD","not using strict equality because the value can be a string or a number when getting the value from the UI and we need the type coercion"
"SATD","const { id } = formContext.projectRevision; //TODO: bring this back when we have the mutation"
"Not SATD","set the text next to the button based on whether the value has changed or not"
"SATD"," import { UseDebouncedMutationConfig } from ""mutations/useDebouncedMutation""; //TODO: bring this back when we have the mutation import { Disposable, MutationParameters } from ""relay-runtime""; //TODO: bring this back when we have the mutation"
"SATD"," mutationFnHook: () => [ (config: UseDebouncedMutationConfig<MutationParameters>) => Disposable, boolean ] //TODO: bring this back when we have the mutation fieldNameToUpdate: string, //TODO: bring this back when we have the mutation formDataTableName: string //TODO: bring this back when we have the mutation"
"SATD"," const [updateFn, isUpdating] = mutationFnHook(); //TODO: bring this back when we have the mutation TODO: remove this once we have the mutation"
"SATD"," to compare the initial value to the current value TODO: remove this once we have the mutation eslint-disable-next-line @typescript-eslint/no-unused-vars"
"SATD"," TODO: We might use something like this once we have the mutation const updatePatch = { [fieldNameToUpdate]: value, };"
"SATD"," TODO: We might use something like this once we have the mutation return new Promise((resolve, reject) => updateFn({ variables: { input: { id: id, projectRevisionPatch: updatePatch, }, }, optimisticResponse: { updateFn: { projectRevision: { id: id, }, }, }, onCompleted: () => { setUpdated(true); TODO: need to add this once we have the mutation setInitialValue(value); TODO: need to add this once we have the mutation setInformationalText(""Updated""); TODO: need to add this once we have the mutation }, onError: reject, debounceKey: id, }) );"
"Not SATD","A factory function that creates a Field/Widget/React component for a routinely updated field.** @param Widget The widget to wrap like a TextWidget, SelectWidget, etc.* @param mutationFnHook The hook that returns the mutation function and a boolean indicating whether the mutation is in progress* @param fieldNameToUpdate The name of the field to update (e.g. ""status"")* @param formDataTableName The name of the form data table to use for updating the field (e.g. ""project"")* @returns a React component that wraps the widget and adds the update button and functionality** How to use:* 1. Create a mutation function hook that returns the mutation function and a boolean indicating whether the mutation is in progress* 2. Create a field/widget component inside the form component using this factory function* 3. Add the field/widget component to the form widgets prop* 4. Replace the widget in the ui-widget of the UISchema with this newly created field/widget component* 5. Pass the `projectRevision` object to the form context"
"Not SATD","eslint-disable-next-line relay/graphql-syntax"
"Not SATD","A section has form configuration items that need to be rendered,* A section can also have its own form configuration to render"
"Not SATD","By default, start with the component open if the submittedDate is empty"
"Not SATD","Rendering hidden children is necessary in case they contain form elements with validation"
"Not SATD","The relay fragment"
"Not SATD","The title of the link to display in this component.* e.g. ""Quarterly Report"" to display ""Quarterly Report <reportIndex>"""
"Not SATD"," This effect only needs to be run once on mount, even if the relay environment changes eslint-disable-next-line react-hooks/exhaustive-deps"
"Not SATD","reset the local state when the prop changes"
"Not SATD"," using a state update with a callback ensures that we always have a reference to the latest searchFilters especially when this handler is fired multiple times in quick sucession, without the component updating which can happen when a single filter component handles multiple variables"
"Not SATD","copy the vars from the query string, so that the args coming from extraFilters are not overriden"
"Not SATD"," At this point the data for the query should be cached, so we can update the route and re-render without suspending"
"Not SATD"," fetchQuery will fetch the query and write the data to the Relay store. This will ensure that when we re-render, the data is already cached and we don't suspend See https://github.com/facebook/relay/blob/b8e78ca0fbbfe05f34b4854484df574d91ba2113/website/docs/guided-tour/refetching/refetching-queries-with-different-data.md#if-you-need-to-avoid-suspense"
"Not SATD"," if the query fails, we still want to update the route, which will retry the query and let a 500 page be rendered if it fails again"
"Not SATD","The top-level query used by the page rendenring the table.* If provided, when the table filters, ordering or pagination are updated,* the table will reload the query before updating the router,* preventing a render with the Suspense fallback while the new data is being fetched."
"Not SATD","class name is used to increase specificity of CSS selectors and override defaults"
"Not SATD","The total number of items in all of the pages"
"Not SATD","Defaults to DEFAULT_PAGE_SIZE."
"Not SATD","The number of items to skip to get to the current page. Defaults to 0"
"Not SATD","This can be used as a UI trick to save space for the search/reset buttons"
"Not SATD","A filter that converts the input to a numerical value when submitting it"
"Not SATD","The name of the relay argument that this filter manages."
"Not SATD","The prefix to use when generating the orderBy argument for this filter.* Defaults to an uppercase version of the argName.* e.g. ""projectName"" => ""PROJECT_NAME"""
"Not SATD","The array of all relay arguments managed by this filter.* Most filters will manage a single argument, but some may manage more,* e.g. to control both an ""isEqual"" and an ""isNull"" relay filter.* Used to know which arguments should be removed from the query when the filters are reset"
"Not SATD"," The JSON string is tripping up eslint eslint-disable-next-line relay/graphql-syntax"
"Not SATD"," We only want to run this effect on mount, so we use an empty array as a dependency. eslint-disable-next-line react-hooks/exhaustive-deps"
"Not SATD","A section has form configuration items that need to be rendered,* A section can also have its own form configuration to render"
"Not SATD","Tasklist section is expanded if:* - either the current step is one of its form items,* - or if any of its form items has the Attention Required status"
"Not SATD","Project Summary Section"
"Not SATD","Amendments & Other Revisions section"
"Not SATD","Attachments Section"
"Not SATD","Remove the default button styles"
"Not SATD","This padding is to make the button outline looks better on focus"
"Not SATD","Remove the default button styles"
"Not SATD","This padding is to make the button outline looks better on focus"
"Not SATD","a workaround for the styled-jsx <style jsx> boolean property issue (see:https://github.com/vercel/next.js/issues/3432)"
"Not SATD","Current date without time information"
"Not SATD","No status as there are no milestones"
"SATD"," TODO add tests for document upload/download once the storage service is round-tripping describe(""The attachments component"", () => { it(""uploads a file"", () => { cy.visit(""/upload""); cy.get('[data-cy=""file-input""]').attachFile(""cif-test-document.docx""); }); });"
"SATD","TODO: the entire body should be tested for accessibility"
"SATD","TODO: the entire body should be tested for accessibility"
"Not SATD","click twice for descending order"
"Not SATD","below code is not a duplicate, we need to click the field twice to get the DESC sort"
"Not SATD","just to wait for the page to load"
"Not SATD","just to wait for the page to load"
"Not SATD","checking the view page for a specific revision"
"SATD","TODO: the entire body should be tested for accessibility"
"Not SATD","click twice for descending order"
"Not SATD","months are zero-indexed"
"Not SATD","add new"
"Not SATD","add overview"
"Not SATD","add managers"
"Not SATD","add contacts"
"Not SATD","add budgets, expenses, and payments"
"Not SATD","checking default values"
"Not SATD","add milestone reports"
"Not SATD","add emissions intensity reports"
"Not SATD","Add Quarterly Reports"
"Not SATD","No annual reports"
"Not SATD","review and submit"
"Not SATD","project overview section"
"Not SATD","funding agreement section"
"Not SATD","additional funding sources section"
"Not SATD","project managers section"
"Not SATD","project contacts section"
"Not SATD","TEIMP section"
"Not SATD","this checks that the project view list shows the milestone report status vs. the other report statuses"
"Not SATD","this test only checks the mandatory and IA-specific forms. The other forms are already tested above in the EP project creation test"
"Not SATD","add new"
"Not SATD","add overview"
"Not SATD","add budgets, expenses, and payments"
"Not SATD","checking default values"
"Not SATD","project summary form"
"Not SATD","review and submit"
"Not SATD","project overview section"
"Not SATD","funding agreement section"
"Not SATD","additional funding sources section"
"Not SATD","project summary report section"
"Not SATD","add new"
"Not SATD","Checking multiple query parameters in the url"
"Not SATD","Add new contact"
"Not SATD","Back to project contact form"
"Not SATD","add new"
"Not SATD","add budgets, expenses, and payments"
"Not SATD","add teimp reports"
"Not SATD","generate quarterly reports"
"Not SATD","generate annual reports"
"Not SATD","add new project with EP funding stream"
"Not SATD","Discard this revision to test the other funding stream"
"Not SATD","change project funding stream to IA"
"Not SATD","edit overview -- change project name"
"Not SATD","edit managers -- delete a manager"
"Not SATD","edit contacts -- add a secondary contact"
"Not SATD","current flow for reaching to the project amendment/revision"
"Not SATD","checking the view page for a draft revision"
"Not SATD","just checking one of other forms are not checked"
"Not SATD"," Screenshot below is commented out because of flakiness. Documented in ticket #1194. cy.happoAndAxe(""Project Revision View"", ""Forms Updated"", ""main"", true);"
"Not SATD","months are zero-indexed"
"Not SATD","edit overview -- change project name"
"Not SATD","edit managers -- delete a manager"
"Not SATD","edit contacts -- add a secondary contact"
"Not SATD","edit budgets, expenses, and payments -- change funding agreement"
"Not SATD","edit additional funding source"
"Not SATD","edit milestone reports -- change date"
"Not SATD","edit quarterly reports -- delete a report"
"Not SATD","two below assertions are not necessary, but it's needed to slow down the test and run the accessibility checks correctly"
"Not SATD","edit teimp"
"Not SATD","edit annual reports -- change comments"
"Not SATD","check diffs"
"Not SATD","Verify that the revision can be accessed by other users"
"Not SATD","Navigate back to the Review and Submit information page"
"Not SATD","Allow the component to finish saving before taking screenshot"
"Not SATD","months are zero-indexed"
"Not SATD","NEW"
"Not SATD","OVERVIEW"
"Not SATD","PROJECT DETAILS"
"Not SATD","MANAGERS"
"Not SATD","CONTACTS"
"Not SATD","BUDGETS, EXPENSES AND PAYMENTS"
"Not SATD","checking default values"
"Not SATD","MILESTONE REPORTS"
"Not SATD","QUARTERLY REPORTS"
"Not SATD","Emissions Intensity Report"
"Not SATD","Annual reports"
"Not SATD","SUMMMARY"
"Not SATD","NEW"
"Not SATD","BUDGETS, EXPENSES AND PAYMENTS"
"Not SATD","PROJECT SUMMARY REPORT"
"Not SATD","SUMMMARY"
"Not SATD","budgets, expenses, and payments"
"Not SATD","additional funding sources"
"SATD","TODO: TEIMP Agreement, when fixture is added"
"Not SATD","filter by ""IA"""
"Not SATD","budgets, expenses, and payments"
"Not SATD","additional funding sources"
"Not SATD","project summary report"
"Not SATD","load more projects to trigger unique proposal reference error"
"Not SATD","NEW"
"Not SATD","OVERVIEW"
"Not SATD","Renders the default error message for a required field"
"Not SATD","BUDGETS, EXPENSES AND PAYMENTS"
"Not SATD","MILESTONE REPORTS"
"Not SATD","Emissions intensity report"
"Not SATD","QUARTERLY REPORTS"
"Not SATD","Annual reports"
"Not SATD","load more projects to trigger unique proposal reference error"
"Not SATD","NEW"
"Not SATD","BUDGETS, EXPENSES AND PAYMENTS"
"Not SATD"," Screenshot below is commented out because of flakiness. Documented in ticket #1194. cy.happoAndAxe(""IA Project budgets Form"", ""empty"", ""main""); checking default values"
"Not SATD"," temporarily removing this flaky screenshot until a permanent fix is in place cy.happoAndAxe( ""Emissions intensity report Form"", ""with errors"", "".error-detail"" );"
"Not SATD"," Screenshot below is commented out because of flakiness. Documented in ticket #1194. cy.happoAndAxe( ""IA Project funding agreement Form"", ""with errors"", "".error-detail"" );"
"Not SATD","undo managers"
"Not SATD","undo contacts"
"Not SATD","undo budgets, expenses and payments"
"Not SATD","undo additional funding source"
"Not SATD","undo TEIMP agreement"
"Not SATD","undo quarterly reports"
"Not SATD","undo annual reports"
"Not SATD","undo milestone reports"
"Not SATD","undo overview"
"Not SATD","undo managers"
"Not SATD","undo contacts"
"Not SATD","undo budgets, expenses and payments"
"Not SATD","undo additional funding source"
"Not SATD","undo milestone reports"
"Not SATD","undo quarterly reports"
"Not SATD","undo annual reports"
"SATD","eslint-disable-next-line @typescript-eslint/no-unused-vars"
"Not SATD","@type {Cypress.PluginConfig}"
"Not SATD","pluck specific keys to keep the table readable"
"Not SATD","Open the login page, fill in the form with username and password and submit."
"Not SATD","This should be more strict depending on your login page template."
"Not SATD","need to return a Cypress promise (could be any cy. command) to let Cypress know that it has to wait for this call"
"Not SATD","Extra assertion to wait for the new milestone report to be added"
"Not SATD","need to return a Cypress promise (could be any cy. command) to let Cypress know that it has to wait for this call"
"Not SATD","Extra assertion to wait for the new milestone report to be added"
"Not SATD","need to return a Cypress promise (could be any cy. command) to let Cypress know that it has to wait for this call"
"Not SATD","holdback percentage is for EP projects only"
"Not SATD","datepicker indexes months from 0, luxon indexes from 1"
"Not SATD"," There is a bug where if cypress starts changing another form on the page too quickly, the last change is discarded and rjsf throws an error."
"Not SATD","Utility to match GraphQL operation based on the operation name"
"Not SATD","Alias operation if operationName matches"
"Not SATD","Any custom formats defined here must also be defined in app/server/middleware/graphql/validateRecord.ts to make AJV aware of them.* Example: ajv.addFormat('<format_name>', <regex>);"
"Not SATD"," Disabling the rules of hooks below is okay, as long as they are not disabled in the component that uses this hook."
"Not SATD","Returns a function that can be used to discard a form change,* e.g. remove a project_contact or project_manager from a pending project_revision.* If the form change was created in the same project revision, i.e. if its operation is ""CREATE"", it will be deleted.* If the form change was created in a different project revision, i.e. if its operation is ""UPDATE"", its operation will be updated to ""ARCHIVE"".* @param connectionId an optional connection id to update when the form change is deleted* @returns"
"Not SATD","Hook to check if the given userGroups makes the user an admin* @returns {boolean} Memoized boolean value"
"Not SATD","Hook that returns true if the router will redirect, false otherwise.*  - Example usage:*    const isRedirecting = useRedirectTo404IfFalsy(object);*    if(isRedirecting) return null;"
"Not SATD","Hook that redirects to the contacts list page, if the contact being viewed is committed and the `preventRedirect` flag is false.*  If the redirect is happening, then the hook returns true, and false otherwise."
"Not SATD","Hook that returns true if the project revision being viewed is not the latest project revision,*  the latest project revision id is not null, and shouldRedirect is true.*  False otherwise."
"Not SATD","Hook that returns true if the formIndex is out of bounds of the formPages array,*  and redirects to the first page of the form.*  False otherwise."
"Not SATD"," Function takes a string as a parameter & returns a parsed JSON object if valid JSON, {} if not valid. Prevents app crash on invalid querystring."
"Not SATD","Find the highest priority group"
"Not SATD"," This is not an exhaustive list of options, more can be found: https://moment.github.io/luxon/#/math"
"Not SATD","@param timestampString The date we are adding the duration to, in timestamptz format (string).* @param toAdd The duration to be added to the date* @returns The resulting date in timestamptz format (string)."
"Not SATD","@param startDate The start date of the duration in timestamptz format (string).* @param endDate The end date of the duration in timestamptz format (string).* @returns a string containing the duration as number of months and days, e.g. ""13 months, 1 day""."
"Not SATD","remove the wrapping span NumberFormat uses by default."
"Not SATD","Current date without time information"
"Not SATD","Current date without time information"
"Not SATD","@param timestampString The date we are subtracting the duration from, in timestamptz format (string).* @param toSubtract The duration to be subtracted from the date* @returns The resulting date in timestamptz format (string)."
"Not SATD","Effectively validating the form a second time to retrieve the errors"
"Not SATD","We walk through the structure to number everything with section numbers and form indices"
"Not SATD"," Invalidate the entire store, to make sure that we don't display any stale data after redirecting to the next page. This could be optimized to only invalidate the affected records."
"Not SATD","A factory function that creates a page component for a form_change record.** It abstracts away the submit, discard and change behaviours from the* individual forms, as well as the relay form change query, session and layouts.** @param resourceTitle The title of the resource, for which the form is being created (e.g. ""Operator"")* @param onSubmitOrDiscardRoute The route to navigate to when the form is submitted or discarded* @param FormComponent The form component to render* @returns a tuple [FormPage, query] where FormPage is the page component to render, and query is the relay query.*          it is meant to be used in the withRelay HOC (e.g. withRelay(FormPage, query, withRelayOptions))."
"Not SATD","removed `getRelaySerializedState` in favor of new API: https://github.com/RevereCRE/relay-nextjs/releases/tag/v1.0.0"
"SATD"," Max 100 requests Number in milliseconds, how long records stay valid in cache (default: 900000, 15 minutes). TODO: is one minute enough? How long should records stay valid?"
"Not SATD","Unset debouncedMutation to ensure it does not get called again with the next network request"
"Not SATD","Server-side redirection of the user to their landing route, if they are logged in"
"Not SATD","defining the class names if we are showing a revision specific diff"
"Not SATD","Ignore oneOf errors https://github.com/rjsf-team/react-jsonschema-form/issues/1263"
"Not SATD","substring is necessary here as the properties include a ""."" prefix. eg. the property for the email field is "".email"""
"Not SATD","The ObjectFieldTemplate is used by RJSF to render the ""Object"" type in a schema.* For really small forms, it can be useful to override the default tempalte with* an empty template that has only renders the individual form fields."
"Not SATD","ArrayFieldTemplate: AnticipatedFundingPerFiscalYearArrayFieldTemplate,"
"Not SATD","teimpReporting"
"Not SATD","uponCompletion"
"Not SATD"," Filter out fields from the formSchema that have not changed from the previous revision so the summary ignores these fields This is mainly used when the form has multiple fields within it and we want to check each field data with the previous revision"
"Not SATD"," Filter out fields from the formSchema that have not changed from the previous revision so the summary ignores these fields This is mainly used when the form has multiple fields within it and we want to check each field data with the previous revision"
"Not SATD","Receives a date and returns a string with the date in a human readable format"
"Not SATD","If we are using this widget to show numbers as money or percent, we can set `isMoney` or `isPercentage` to true in the uiSchema."
"Not SATD","If we need to set the amount of decimal places, we can set it in the uiSchema, otherwise there will be no decimal places."
"Not SATD","Hardcoded for now, we can change it if we need to"
"Not SATD","This ensures that a minimum of three fiscal years are displayed, even if the user hasn't filled out any milestone information yet"
"Not SATD","If we are using this widget to show numbers as money or percent, we can set `isMoney` or `isPercentage` to true in the uiSchema."
"Not SATD","If we need to set the amount of decimal places, we can set it in the uiSchema, otherwise there will be no decimal places."
"Not SATD","This is required since we render a <span> component"
"Not SATD","This color is somehow grey-ish to bypass accessibility issues"
"Not SATD","If we are using this widget to show numbers as money or percent, we can set `isMoney` or `isPercentage` to true in the uiSchema."
"Not SATD","If we need to set the amount of decimal places, we can set it in the uiSchema, otherwise there will be no decimal places."
"Not SATD","If we are using this widget to show numbers as money or percent, we can set `isMoney` or `isPercentage` to true in the uiSchema."
"Not SATD","If we need to set the amount of decimal places, we can set it in the uiSchema, otherwise there will be no decimal places."
"Not SATD","If we are using this widget to show numbers as money or percent, we can set `isMoney` or `isPercentage` to true in the uiSchema."
"Not SATD","If we need to set the amount of decimal places, we can set it in the uiSchema, otherwise there will be no decimal places."
"Not SATD","This hook creates an archive mutation by wrapping the relay `useMutationWithErrorMessage` hook and* setting the mutation variables with a `archivedAt` value.** @param relayNodeName the name of the relay node the mutation is applied to, e.g. ""projectRevision"", ""formChange"", ...* @param mutation the GraphQL 'update' mutation on the relay node* @returns a tuple with the archinf mutation and a boolean indicating if the mutation is in flight** example usage:** const mutation = graphql`*    mutation archiveMyEntityMutation($input: UpdateMyEntityInput!) {*     updateMyEntity(input: $input) {*      __typename*    }* }`;** const [archiveMyEntityMutation, isInFlight] = useArchiveMutation(""myEntity"", mutation);"
"Not SATD"," Debounced mutations should be commited immediately to perform the optimisticUpdate The actual request will be debounced in the network layer Here we either dispose of a debounced mutation, or remove it from the map when it errors/completes"
"Not SATD","Specific mutation for a form_change for a project.* Includes whether the suggested proposal reference is unique in the system."
"Not SATD","Specific mutation for a form_change for a funding agreement."
"Not SATD","Delete mutation for a form_change that was created in the same revision."
"Not SATD","Delete mutation for a form_change that was created in a previous revision & should be updated with operation = 'ARCHIVE'."
"Not SATD","Specific mutation for a form_change for a project.* Includes whether the suggested proposal reference is unique in the system."
"Not SATD","Growthbook - external-operators"
"Not SATD","we don't care about the actual base here, just want to parse the search params"
"Not SATD","Growthbook - amendments"
"Not SATD"," Invalidate the entire store,to make sure that we don't display any stale data after redirecting to the next page. This could be optimized to only invalidate the affected records."
"Not SATD","Function: approve staged change, trigger an insert on the project*  table & redirect to the project page"
"Not SATD","Growthbook - amendments"
"Not SATD","Growthbook - amendments"
"Not SATD","filtering to show only the amendment statuses that are allowed to be selected based on the revision type"
"Not SATD","eslint-disable relay/must-colocate-fragment-spreads"
"Not SATD","Growthbook - external-operators"
"Not SATD","eslint-disable relay/graphql-naming"
"Not SATD","/// Metabase"
"Not SATD","/// Support email mailto:"
"Not SATD","/// Operators"
"Not SATD","/// Contact"
"Not SATD","Optional queries are used to create new contact and redirect the user to back to the project contact form"
"Not SATD","/// Project Revision"
"Not SATD","/// Project"
"Not SATD","// External User"
"Not SATD","Allow the server to send any in-flight requests before shutting down"
"Not SATD"," graphql-upload exports the `.js` in the path: https://github.com/jaydenseric/graphql-upload/blob/aa15ee0eb2b3a4e2421d098393bbbf9252f1a8c7/package.json#L41 eslint-disable-next-line import/extensions"
"Not SATD"," trust the first proxy, so that secure cookies are set, even though the request reaching the express container is not secure"
"Not SATD"," If authentication is disabled use the user above to connect to the database Otherwise, use the PGUSER env variable"
"Not SATD","Database connection service that creates a pgPool connectionbased on database options in the environment variables of calling process."
"Not SATD","Takes a 'cookies' object (key-value pairs in an object)"
"Not SATD"," if the ENABLE_MOCK_TIME or ENABLE_DB_MOCKS_COOKIES_ONLY env variable is set, creates the settings object needed for postgres to use the mocks schema by default and the fields to retrieve from the cookies"
"Not SATD","import from dist/helpers to prevent bundling all the @bcgov-cas/sso-express dependencies"
"Not SATD"," When we will have other identity providers, we can check it the identity_provider claim return req.claims.identity_provider === ""idir"" ? [groupConstants.UNAUTHORIZED_IDIR_USER] : [groupConstants.NON_IDIR_USER];"
"Not SATD"," Renders a static info page on unsupported browsers. Files in /public/ are excluded."
"Not SATD","This middleware calls the createUserFromSession mutation."
"Not SATD","Tell search + crawlers not to index non-production environments:"
"Not SATD","True if the host has been configured to use https"
"Not SATD","There is no need to pass a context to the resolver at this time"
"Not SATD","This is a list of schema names that live in the database and*  not as static json data in the code.*  The validation plugin will try to fetch them from the cif.form table*  instead of using the static json schema."
"Not SATD","There is no need to pass a context to the resolver at this time"
"Not SATD","If the mutation doesn't change the form data, we don't need to re-validate"
"Not SATD"," This is the recommended way to fetch data ahead of running the resolver of the GraphQL mutation - see first ""IMPORTANT"" note here: https://www.graphile.org/postgraphile/make-extend-schema-plugin/#the-selectgraphqlresultfromtable-helper"
"Not SATD","Use consola for logging instead of default logger"
"Not SATD","You can add more to context if you like"
"Not SATD"," Execute your GraphQL query in this function with the provided `context` object, which should NOT be used outside of this function."
"Not SATD","Save tile to remote storage system"
"Not SATD","Replace existing GraphQL type with `Upload` type"
"Not SATD","Extract the old resolver from `field`"
"SATD","eslint-disable-next-line @typescript-eslint/no-shadow"
"Not SATD","Copy over everything except 'resolve'"
"Not SATD","Recursively check for Upload promises to resolve"
"SATD","eslint-disable-next-line require-atomic-updates"
"Not SATD","Call the old resolver"
"Not SATD","Finally return the result."
"Not SATD"," graphql-upload exports the `.js` in the path: https://github.com/jaydenseric/graphql-upload/blob/aa15ee0eb2b3a4e2421d098393bbbf9252f1a8c7/package.json#L45 eslint-disable-next-line import/extensions"
"Not SATD"," It's possible that `resolve` isn't specified on a field, so in that case we fall back to a default resolver."
"Not SATD"," Add our new resolver which wraps the old resolver eslint-disable-next-line @typescript-eslint/no-shadow"
"Not SATD","File copied from https://github.com/graphile-contrib/postgraphile-plugin-upload-field/blob/5aca056eacda9a9206323af49dd9528e607e20a7/src/UploadFieldPlugin.js* And updated to support the newer export style from graphql-upload"
"Not SATD","AJV needs to be made aware of any custom formats used in the schema"
"Not SATD"," ajv caches compiled schemas on first instantiation, we don't need to precompile schemas in advance"
"Not SATD"," This is fine since this is a react functional component eslint-disable-next-line react-hooks/rules-of-hooks"
"SATD","eslint-disable-next-line jest/no-standalone-expect"
"Not SATD","mocking the getConfig function to return a mocked config object to be used in `getSupportEmailMailTo` function"
"Not SATD","change the route and re-render, the mutation should be called again"
"Not SATD","rerender without changing the route, should not call the mutation again"
"SATD"," TODO: use assertion when the project summary report is implemented expect(screen.getByText(/project summary report/i)).toBeVisible();"
"Not SATD"," We're using a wrapper component to avoid rendering errors with <td> elements not being in a table."
"Not SATD","Reset the mocked system date"
"Not SATD","Once per form"
"Not SATD","First Node"
"Not SATD","updated due date"
"Not SATD","updated received date"
"Not SATD","Second Node"
"Not SATD","Third Node"
"Not SATD","Fourth Node"
"Not SATD","Clear button only appear one time"
"Not SATD","Remove buttons only appear on alternate contacts"
"Not SATD","Warning: Expected `optimisticResponse` to match structure of server response for mutation `updateFormChangeMutation`"
"Not SATD","Once per form"
"Not SATD","rank needs to be placed here because for any nested ProjectRevision type, the Relay testing environment uses this top-level ProjectRevision() generator"
"Not SATD","Also ensures that funding stream is read only"
"Not SATD","Additional Funding Source section"
"Not SATD","Expenses & Payments Tracker Section"
"Not SATD","Additional Funding Source section"
"Not SATD","Expenses & Payments Tracker Section"
"Not SATD","The Funding Parameters"
"Not SATD","The additional funding source"
"Not SATD"," max funding changes max funding changes"
"Not SATD","The whole `formChange` object is null before a manager is selected, so the form change id (comes from `rowId`) is undefined. This test should be updated to mock data if the underlying architecture changes to return a non-null form_change object."
"Not SATD"," Warning: Expected `optimisticResponse` to match structure of server response for mutation `addManagerToRevisionMutation`, Warning: RelayResponseNormalizer: Payload did not contain a value for field `id: id`. Check that you are parsing with the same query that was used to fetch the payload. RelayObservable: Unhandled Error Error: at /home/briannacerkiewicz/cas-cif/app/tests/unit/components/Form/ProjectManagerForm.test.tsx:220:50"
"Not SATD"," Warning: Expected `optimisticResponse` to match structure of server response for mutation `updateFormChangeMutation`, Warning: RelayResponseNormalizer: Payload did not contain a value for field `operation: operation`. Check that you are parsing with the same query that was used to fetch the payload."
"Not SATD"," Warning: Expected `optimisticResponse` to match structure of server response for mutation `deleteManagerFromRevisionWithArchiveMutation`, Warning: RelayResponseNormalizer: Payload did not contain a value for field `query: query`. Check that you are parsing with the same query that was used to fetch the payload."
"Not SATD","changed fields"
"Not SATD","Archive milestone report"
"Not SATD","description diff"
"Not SATD","milestone diff"
"Not SATD","report due date diff"
"Not SATD","select the overall status badge"
"Not SATD","Once per form"
"Not SATD","First Node"
"Not SATD","Second Node"
"Not SATD","Third Node"
"Not SATD","Fourth Node"
"Not SATD","only the changed field is visible"
"Not SATD","Disclaimer"
"Not SATD","Privacy"
"Not SATD","Accessibility"
"SATD","Copyright"
"Not SATD","Contact Us"
"Not SATD","Program Details"
"Not SATD","Disclaimer"
"Not SATD","Privacy"
"Not SATD","Accessibility"
"SATD","Copyright"
"Not SATD"," I'm not testing the href because it is using a function and that function returns undefined during the test.(It's working perfectly on the rendered page though) tried to mock the function itself but it didn't work"
"Not SATD"," We're using a wrapper component to avoid rendering errors with <td> elements not being in a table."
"Not SATD","testing some classnames that are used to style the diff"
"Not SATD"," We're using a wrapper component to avoid rendering errors with <td> elements not being in a table."
"Not SATD","mocking the bcgov theme button because we need enable the button for testing"
"SATD","TODO: remove this when we have a mock of the mutation function"
"SATD","TODO: replace this with a mock of the mutation function"
"SATD","TODO: replace this with a mock of the mutation function"
"SATD","TODO: replace this with a mock of the mutation function"
"SATD","TODO: replace this with a mock of the mutation function"
"SATD","TODO: replace this with a mock of the mutation function"
"Not SATD","Reset the mocked system date"
"Not SATD","Group role grabs the fieldset"
"Not SATD","Effectively Jan 20th on Vancouver time (Jan 21st 1:10am EST)"
"Not SATD","Group role grabs the fieldset"
"Not SATD","Group role grabs the fieldset"
"Not SATD","Group role grabs the fieldset"
"Not SATD","Group role grabs the fieldset"
"Not SATD","eslint and the relay compiler are conflicting here."
"Not SATD","eslint-disable relay/graphql-naming"
"SATD","eslint-disable-next-line @typescript-eslint/no-unused-vars"
"SATD","eslint-disable-next-line @typescript-eslint/no-unused-vars"
"Not SATD","The main functionality is already tested in the useDiscardFormChange test (which is a better integration test)."
"Not SATD","A mock function to allow us to test which mutation is processed"
"Not SATD","A mock function to allow us to test which mutation is processed"
"Not SATD","No debounceKey here"
"Not SATD","A mock function to allow us to test which mutation is processed"
"Not SATD","A mock function to allow us to test which mutation is processed"
"Not SATD","This is not a mutation"
"Not SATD"," `commitInRender` never changes in the test eslint-disable-next-line react-hooks/rules-of-hooks"
"Not SATD","This test setup is based on the test of the useMutation hook in* the react-relay library."
"Not SATD","@jest-environment node"
"Not SATD","the date is formatted using locale and it can show up slightly differently in different browsers (e.g., sometimes there's a period after the month abbreviation, sometimes there's not)"
"Not SATD","This is a required prop but not required for the test"
"Not SATD","This is a required prop but not required for the test"
"Not SATD","@jest-environment node"
"Not SATD","@jest-environment node"
"Not SATD","5 rows: 1 header, 1 filter, 1 for the pagination, and 2 for the attachments"
"Not SATD","eslint-disable-next-line jest/expect-expect"
"Not SATD","4 rows: 1 header, 1 filter, 1 for the pagination, and 1 for the amendment and revision"
"Not SATD","If the form is the project manager form, return the project manager schema"
"Not SATD","If the form is the project contact form, return the project contact schema"
"Not SATD","Handle default case"
"Not SATD","We need a non-null amount of form changes"
"Not SATD","https://relay.dev/docs/next/guides/testing-relay-with-preloaded-queries/#configure-the-query-resolver-to-generate-the-response* To find the key of the generated operation, one can call* `console.log(JSON.stringify(operation, null, 2))`* just before returning the MockPayloadGenerator and looking for concreteType instances"
"Not SATD","https://relay.dev/docs/next/guides/testing-relay-with-preloaded-queries/#configure-the-query-resolver-to-generate-the-response* To find the key of the generated operation, one can call* `console.log(JSON.stringify(operation, null, 2))`* just before returning the MockPayloadGenerator and looking for concreteType instances"
"Not SATD","1. The response has the right headers set"
"Not SATD","2. The storage client's file's pipe method has been called with the response object"
"Not SATD","@jest-environment node"
"Not SATD","@jest-environment node"
"Not SATD","testing this in the next test"
"Not SATD","this validates it is the project schema"
"Not SATD","testing this in the next test"
"Not SATD","testing this in the next test"
"Not SATD","Once to fetch the schema name"
"Not SATD","Once to fetch the schema from the database"
"Not SATD","testing this in the next test"
"Not SATD","Enable all growthbook feature flags in jest by defaultotherwise, all tests with 'off' feature flags will fail"
"Not SATD","-*- coding: utf-8 -*-"
"Not SATD"," # DAG triggering cron jobs to setup the cif database                       # #"
"Not SATD"," # DAG to test database backup integrity                                       # #"
"Not SATD"," # DAG to insert timestamp for backup testing                                  # #"
"Not SATD","############################################################################### #                                                                             # # DAG triggering cron jobs to setup the cif database                       # #                                                                             # ###############################################################################"
"Not SATD","############################################################################### #                                                                             # # DAG to test database backup integrity                                       # #                                                                             # ###############################################################################"
"Not SATD","############################################################################### #                                                                             # # DAG to insert timestamp for backup testing                                  # #                                                                             # ###############################################################################"
"Not SATD","In case of a parsing error or anything else, we return the regular now() behaviour"
"Not SATD"," Deploy mocks:mock_now_method to pg requires: schema_mocks"
"Not SATD"," look at the database options if there is a value set if it's not set the current_setting method returns nil and we return now()"
"Not SATD","Converting timestamptz to unix epoch"
"Not SATD"," Deploy mocks:set_mocked_time_in_transaction to pg requires: mock_now_method"
"Not SATD","Deploy mocks:schemas/main to pg"
"Not SATD","Revert mocks:mock_now_method from pg"
"Not SATD","Revert mocks:set_mocked_time_in_transaction from pg"
"Not SATD","Revert mocks:schema_mocks from pg"
"Not SATD","3) we verify that if we set the mocks.mocked_timestamp value to null? or removed? or invalid? we default to now()"
"Not SATD","4) We verify that fractional epochs are supported"
"Not SATD"," writing this test on Oct 28th, 2020 1) we verify that now() works"
"Not SATD"," 2) we verify that, if we set the 'mocks.mocked_timestamp' value, now() defaults to that 925920000 is May 5th 1999 at 9am, as Unix Epoch, west coast time"
"SATD"," the method should take care of the search path for the transaction no need to specify which `mocks()` we call"
"Not SATD"," writing this test on Dec 7, 2020 1) we verify that now() works"
"Not SATD"," 2) we verify that, if we call set_mocked_time_in_transaction, time travel is properly enabled 925920000 is May 5th 1999 at 9am, as Unix Epoch, west coast time"
"Not SATD","Verify mocks:mock_now_method on pg"
"Not SATD","Verify mocks:set_mocked_time_in_transaction on pg"
"Not SATD","Verify mocks:schema_mocks on pg"
"Not SATD","This is required as we now only allow user subs to be updated once."
"Not SATD","Commit records"
"Not SATD","ep projects"
"Not SATD","ia projects"
"Not SATD","external testing operator projects"
"Not SATD","insert milestone reports including payments"
"Not SATD","reporting requirement"
"Not SATD","insert annual reports for EP projects"
"Not SATD","insert quarterly reports for EP projects"
"Not SATD","insert project summary reports for IA projects"
"Not SATD","ep funding parameters"
"Not SATD","ia funding parameters"
"Not SATD","first Amendment type project revision"
"Not SATD","first General Revision type project revision"
"Not SATD","first Minor Revision type project revision"
"Not SATD","second Amendment type project revision"
"Not SATD","cif.cif_user should not be truncated or else all tables should be (since they all have a created_by column)"
"Not SATD","Deploy cif:create_roles to pg"
"Not SATD","The create roles affects the database globally. Cannot drop the roles once created."
"Not SATD"," Deploy cif:computed_columns/full_name to pg requires: tables/cif_user"
"Not SATD"," Deploy cif:computed_columns/full_name to pg requires: tables/cif_user"
"Not SATD","Deploy cif:computed_columns/contact_full_name to pg"
"Not SATD","Deploy cif:computed_columns/contact_full_name to pg"
"Not SATD","Deploy cif:computed_columns/contact_full_phone to pg"
"Not SATD","Deploy cif:computed_columns/contact_pending_form_change to pg"
"Not SATD","Deploy cif:computed_columns/contact_pending_form_change_001_drop_before_cif_user_update to pg"
"Not SATD"," Deploy cif:computed_columns/contact_pending_form_change_002_create_after_cif_user_update to pg requires: computed_columns/contact_pending_form_change_001_drop_before_cif_user_update"
"Not SATD"," Deploy cif:emission_intensity_report_calculated_ei_performance to pg requires: tables/emission_intensity_report"
"Not SATD"," Deploy cif:emission_intensity_report_calculated_ei_performance to pg requires: tables/emission_intensity_report"
"Not SATD"," Deploy cif:emission_intensity_report_calculated_ei_performance to pg requires: tables/emission_intensity_report"
"Not SATD","Deploy cif:computed_columns/form_change_as_emission_intensity_report to pg"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned emission_intensity_report record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD","Deploy cif:computed_columns/form_change_as_emission_intensity_report to pg"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned emission_intensity_report record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD"," Deploy cif:computed_columns/form_change_as_project to pg requires: tables/project requires: tables/project_001 requires: tables/form_change"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_contact record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD"," Deploy cif:computed_columns/form_change_as_project to pg requires: tables/project requires: tables/project_001 requires: tables/form_change"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_contact record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD"," Deploy cif:computed_columns/form_change_as_project to pg requires: tables/project requires: tables/project_001 requires: tables/form_change"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_contact record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD"," Deploy cif:computed_columns/form_change_as_project_contact to pg requires: tables/project requires: tables/contact requires: tables/form_change"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_contact record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD"," Deploy cif:computed_columns/form_change_as_project_manager to pg requires: tables/form_change requires: tables/project_manager"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_manager record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_manager record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD"," Deploy cif:computed_columns/form_change_as_reporting_requirement to pg requires: tables/form_change requires: tables/reporting_requirement"
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_contact record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD","Deploy cif:computed_columns/form_change_calculated_ei_performance to pg"
"Not SATD"," Deploy cif:computed_columns/form_change_calculated_gross_amount_this_milestone to pg requires: tables/form_change"
"Not SATD"," Deploy cif:computed_columns/form_change_calculated_holdback_amount_this_milestone to pg requires: tables/form_change"
"Not SATD"," Deploy cif:computed_columns/form_change_calculated_net_amount_this_milestone to pg requires: tables/form_change"
"Not SATD","Deploy cif:computed_columns/form_change_calculated_total_payment_amount_to_date from pg"
"SATD","TODO: placeholder"
"Not SATD"," Deploy cif:computed_columns/form_change_eligible_expenses_to_date to pg requires: tables/form_change"
"Not SATD"," Deploy cif:computed_columns/form_change_gross_payments_to_date to pg requires: tables/form_change"
"Not SATD"," Deploy cif:computed_columns/form_change_holdback_amount_to_date to pg requires: tables/form_change"
"Not SATD","Deploy cif:form_change_is_pristine to pg"
"Not SATD","Deploy cif:computed_columns/form_change_is_unique_value to pg"
"Not SATD"," Deploy cif:computed_columns/form_change_net_payments_to_date to pg requires: tables/form_change"
"Not SATD"," Deploy cif:functions/form_change_parent_form_change_from_revision to pg requires: tables/form_change"
"Not SATD"," Deploy cif:functions/form_change_payment_percentage to pg requires: tables/form_change requires: computed_columns/emission_intensity_report_calculated_ei_performance 100 ???????? ((-1.5) x GHG Emission Intensity Performance + 145), values capped at 0 and 100"
"Not SATD"," We need a case here becase greatest() and least() will ignore null values, while we care about returning null if both values are null."
"Not SATD"," Deploy cif:functions/form_change_payment_percentage to pg requires: tables/form_change requires: computed_columns/emission_intensity_report_calculated_ei_performance 100 ???????? ((-1.5) x GHG Emission Intensity Performance + 145)"
"Not SATD"," Deploy cif:computed_columns/form_change_reporting_requirement_status to pg requires: tables/form_change"
"Not SATD","Deploy cif:computed_columns/operator_pending_form_change to pg"
"Not SATD"," Deploy cif:computed_columns/operator_pending_form_change_001_drop_before_cif_user_update to pg requires: computed_columns/operator_pending_form_change"
"Not SATD"," Deploy cif:computed_columns/operator_pending_form_change_002_create_after_cif_user_update to pg requires: computed_columns/operator_pending_form_change_001_drop_before_cif_user_update"
"Not SATD"," Deploy cif:computed_columns/project_latest_committed_project_revision to pg requires: tables/project requires: tables/project_revision"
"Not SATD","Deploy cif:computed_columns/project_next_milestone_due_date to pg"
"Not SATD","Deploy cif:computed_columns/project_pending_project_revision to pg"
"Not SATD","Deploy cif:computed_columns/project_primary_managers to pg"
"Not SATD","Deploy cif:computed_columns/project_revision_anticipated_funding_amount_per_fiscal_year to pg"
"Not SATD","Deploy cif:computed_columns/project_revision_effective_date to pg"
"Not SATD"," Deploy cif:computed_columns/project_revision_form_changes_for to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD","Deploy cif:computed_columns/project_revision_gross_payment_amount to pg"
"Not SATD","Get individual milestone statuses"
"Not SATD"," Deploy cif:computed_columns/project_revision_milestone_report_statuses to pg requires: tables/form_change"
"Not SATD","Get individual milestone statuses"
"Not SATD"," Deploy cif:computed_columns/project_revision_milestone_report_statuses to pg requires: tables/form_change"
"Not SATD","Get individual milestone statuses"
"Not SATD"," Deploy cif:computed_columns/project_revision_milestone_report_statuses to pg requires: tables/form_change"
"Not SATD","Deploy cif:computed_columns/project_revision_net_payment_amount to pg"
"Not SATD"," Deploy cif:computed_columns/project_revision_project_form_change to pg requires: tables/project_revision"
"Not SATD"," Deploy cif:computed_columns/project_revision_project_manager_form_changes_by_label to pg requires: tables/form_change requires: tables/project_manager"
"Not SATD"," Deploy cif:computed_columns/project_revision_project_manager_form_changes_by_label to pg requires: tables/form_change requires: tables/project_manager"
"Not SATD","Deploy cif:computed_columns/project_revision_rank to pg"
"Not SATD","As soon as there's a committed record for this project we want to exclude that record's score from the ranking calculation because it isn't as up-to-date as the new_form_data"
"Not SATD","If we have only another status that is not 'Not Started' and that status is 'Filled' then we are complete"
"Not SATD"," Deploy cif:computed_columns/project_revision_tasklist_status_for to pg requires: util_functions/get_form_status"
"Not SATD","If we have only another status that is not 'Not Started' and that status is 'Filled' then we are complete"
"Not SATD"," Deploy cif:computed_columns/project_revision_tasklist_status_for to pg requires: util_functions/get_form_status"
"Not SATD","Deploy cif:computed_columns/project_revision_teimp_payment_amount to pg"
"Not SATD","Deploy cif:computed_columns/project_revision_teimp_payment_percentage to pg"
"Not SATD","Deploy cif:computed_columns/project_revision_teimp_payment_percentage to pg"
"Not SATD","Deploy cif:computed_columns/project_revision_total_project_value to pg"
"Not SATD"," Deploy cif:computed_columns/project_revision_type_row_number to pg requires: tables/project requires: tables/project_revision"
"Not SATD","Deploy cif:computed_columns/project_revision_upcoming_reporting_requirement_form_change to pg"
"Not SATD","Deploy cif:computed_columns/project_revision_upcoming_reporting_requirement_form_change to pg"
"Not SATD"," Deploy cif:computed_columns/reporting_requirement_has_expenses to pg requires: tables/report_type requires: tables/reporting_requirement"
"Not SATD","Deploy cif:data/002_insert_json_schema_form_data_remove_default_from_annual_report_schema to pg"
"Not SATD","reporting_requirement (quarterly / annual report)"
"Not SATD","Deploy cif:data/005_insert_json_schema_form_data_remove_undefined_from_project_contact_schema to pg"
"Not SATD","project_contact"
"Not SATD","Deploy cif:data/006_json_schema_project_manager_form_remove_default to pg"
"Not SATD","Migration Inserts all json-schema form data into cif.form"
"Not SATD","project"
"Not SATD","project_contact"
"Not SATD","project_manager"
"Not SATD","reporting_requirement (quarterly / annual report)"
"Not SATD","contact"
"Not SATD","operator"
"Not SATD","milestone"
"Not SATD","funding_agreement"
"SATD","emission_intensity_report"
"Not SATD","add a form_change_commit_handler once they are created for the below records"
"Not SATD","additional_funding_source and funding_parameter to be removed when funding agreement form gets refactored to be one form change, just here to pass the fkey"
"Not SATD"," Deploy cif:migrations/insert_json_schema_form_data to pg requires: functions/handle_milestone_form_change_commit requires: tables/form"
"Not SATD","Deploy cif:data/insert_json_schema_form_data_project_summary to pg"
"SATD","- project_summary_report"
"Not SATD","Deploy cif:data/insert_json_schema_form_data_separate_EP_and_IA_funding_schemas to pg"
"Not SATD","funding_parameter_IA and funding_parameter_EP to be removed when funding agreement form gets refactored to be one form change, just here to pass the fkey"
"Not SATD","Deploy cif:data/insert_json_schema_form_data_update_milestone_form_field_titles to pg"
"Not SATD","Deploy cif:data/insert_json_schema_form_dependency_update_milestone_form_total_eligible_expenses to pg"
"Not SATD","Deploy cif:functions/funding_form_changes_to_separate_schemas to pg"
"Not SATD","If there is no change in the form data, return the form_change record and do not touch the associated table."
"Not SATD","it is necessary to put the values in a row(...) in case there is only one value;"
"Not SATD"," Deploy cif:functions/handle_default_form_change_commit to pg requires: tables/form_change"
"Not SATD","Prune the form_data object of any deprecated columns.If a column is deprecated, but the key still exists in older form data recordsit will cause an error when trying to insert data into that column."
"Not SATD","If there is no change in the form data, return the form_change record and do not touch the associated table."
"Not SATD","it is necessary to put the values in a row(...) in case there is only one value;"
"Not SATD"," Deploy cif:functions/handle_default_form_change_commit to pg requires: tables/form_change"
"Not SATD","If there is no change in the form data, return the form_change record and do not touch the associated table."
"Not SATD","can be null if creating with empty form data...problem?"
"Not SATD"," Deploy cif:functions/handle_milestone_form_change_commit to pg requires: tables/form_change"
"Not SATD","If there is no change in the form data, return the form_change record and do not touch the associated table."
"Not SATD"," Deploy cif:functions/handle_project_summary_report_form_change_commit to pg requires: tables/form_change"
"Not SATD","Deploy cif:functions/migration_milestone_form_changes_to_single_form_change to pg"
"Not SATD","reporting requirement data"
"Not SATD","has_expenses comes from the report type table"
"Not SATD","milestone report data"
"SATD"," payment data we aren't tracking calculated amounts yet, the migration function doesn't need to take care of them."
"Not SATD","Deploy cif:functions/pending_new_form_change_for_table to pg"
"Not SATD"," Deploy cif:functions/pending_new_form_change_for_table_001_drop_before_cif_user_update to pg requires: functions/pending_new_form_change_for_table"
"Not SATD"," Deploy cif:functions/pending_new_form_change_for_table_002_create_after_cif_user_update to pg requires: functions/pending_new_form_change_for_table_001_drop_before_cif_user_update"
"Not SATD","Deploy cif:functions/pending_new_project_revision to pg"
"Not SATD"," Deploy cif:functions/pending_new_project_revision_001_drop_before_cif_user_update to pg requires: functions/pending_new_project_revision"
"Not SATD"," Deploy cif:functions/pending_new_project_revision_002_create_after_cif_user_update to pg requires: functions/pending_new_project_revision_001_drop_before_cif_user_update"
"Not SATD","ensure null, empty, and whitespace _sub / idir_userid claims are filtered out"
"Not SATD","unique identifier can never be null"
"Not SATD"," Deploy cif:function_session to pg requires: schemas/main requires: types/keycloak_jwt"
"Not SATD"," Deploy cif:functions/session_001_drop_function_before_table_update to pg requires: functions/session"
"Not SATD","ensure null, empty, and whitespace _sub claim is filtered out"
"Not SATD","unique identifier can never be null"
"Not SATD"," Deploy cif:functions/session_002_create_function_after_table_update to pg requires: functions/session_001_drop_function_before_table_update"
"Not SATD","Deploy cif:migrations/001_milestone_form_changes_to_single_form_change to pg"
"Not SATD","Deploy cif:migrations/002_separate_funding_schemas_for_EP_and_IA to pg"
"Not SATD","Deploy cif:mutations/add_additional_funding_source_to_revision to pg"
"Not SATD","Deploy cif:mutations/add_contact_to_revision to pg"
"Not SATD","We need the to pass the contact_id conditionally, because json format doesn't support null values"
"Not SATD"," Deploy cif:mutations/add_emission_intensity_report_to_revision to pg requires: tables/reporting_requirement requires: tables/form_change"
"Not SATD","Adding a emission intensity report to a project_revision is a chained operation. The data for emission is spread across two tables:- reporting_requirement (base table, common to all reports)- emission_intensity_report (data specific to emission intensity reports)Because this data is spread across two tables we have to create two form_change records within one transaction, one for each table."
"Not SATD"," Deploy cif:mutations/add_emission_intensity_report_to_revision to pg requires: tables/reporting_requirement requires: tables/form_change"
"Not SATD","Adding a emission intensity report to a project_revision is a chained operation. The data for emission is spread across two tables:- reporting_requirement (base table, common to all reports)- emission_intensity_report (data specific to emission intensity reports)Because this data is spread across two tables we have to create two form_change records within one transaction, one for each table."
"Not SATD"," Deploy cif:mutations/add_milestone_to_revision to pg requires: tables/reporting_requirement requires: tables/form_change"
"Not SATD"," Deploy cif:mutations/add_milestone_to_revision to pg requires: tables/reporting_requirement requires: tables/form_change"
"Not SATD","Adding a milestone to a project_revision is a chained operation. The data for milestones is spread across three tables:- reporting_requirement (base table, common to all reports)- milestone_report (data specific to milestone reports)- payment (payment data, common to some reports)Because this data is spread across three tables we have to create three form_change records within one transaction, one for each table."
"Not SATD"," Deploy cif:mutations/commit_form_change to pg requires: tables/form_change"
"Not SATD","Deploy cif:mutations/commit_form_change to pg"
"SATD","TODO : add a conditional behaviour based on fc.form_id"
"Not SATD","Deploy cif:mutations/commit_form_change to pg"
"SATD","TODO : add a conditional behaviour based on fc.form_id"
"Not SATD","Deploy cif:mutations/commit_project_revision to pg"
"Not SATD","defer FK constraints check to the end of the transaction"
"Not SATD"," Propagate the change_status to all related form_change records Save the project table first to avoid foreign key violations from other potential tables."
"Not SATD","Deploy cif:mutations/commit_project_revision to pg"
"Not SATD","defer FK constraints check to the end of the transaction"
"Not SATD"," Propagate the change_status to all related form_change records Save the project table first do avoid foreign key violations from other potential tables."
"Not SATD","Deploy cif:mutations/create_form_change to pg"
"Not SATD","project_id is null until the project is created"
"Not SATD"," Deploy cif:mutations/create_project to pg requires: tables/project"
"Not SATD","project_id is null until the project is created"
"Not SATD"," Deploy cif:mutations/create_project to pg requires: tables/project"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","don't need to order before limiting or further filter because funding stream is immutable and will be the same in all form changes"
"Not SATD","don't need to order before limiting or further filter because funding stream is immutable and will be the same in all form changes"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","don't need to order before limiting or further filter because funding stream is immutable and will be the same in all form changes"
"Not SATD","don't need to order before limiting or further filter because funding stream is immutable and will be the same in all form changes"
"Not SATD","Deploy ggircs-app:mutations/create_user_from_session to pg"
"Not SATD"," Deploy cif:mutations/create_user_from_session_001_drop_before_cif_user_update to pg requires: mutations/create_user_from_session"
"Not SATD","Deploy cif:mutations/delete_project_revision to pg"
"Not SATD","Deploy cif:mutations/delete_project_revision to pg"
"Not SATD"," Deploy cif:mutations/discard_additional_funding_source_form_change to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD"," Deploy cif:mutations/discard_emission_intensity_report to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD","Removing or archiving a emission intensity report is a chained operation. The data for emissions intensity is spread across two tables:- reporting_requirement (base table, common to all reports)- discard_emission_intensity_report (data specific to milestone reports)Because this data is spread across two tables we have to remove or archive two form_change records within one transaction, one for each table."
"Not SATD"," Deploy cif:mutations/discard_funding_parameter_form_change to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD","Removing or archiving a funding_parameter is a chained operation. The data for funding_parameter is spread across two tables:- reporting_requirement (base table, common to all reports)- funding_parameter (data specific to parameter_form)Because this data is spread across two tables we have to remove or archive two form_change records within one transaction, one for each table."
"Not SATD"," Deploy cif:mutations/discard_funding_parameter_form_change to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD","Removing or archiving a funding_parameter is a chained operation. The data for funding_parameter is spread across two tables:- reporting_requirement (base table, common to all reports)- funding_parameter (data specific to parameter_form)Because this data is spread across two tables we have to remove or archive two form_change records within one transaction, one for each table."
"Not SATD"," Deploy cif:mutations/discard_milestone_form_change to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD"," Deploy cif:mutations/discard_milestone_form_change to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD","Removing or archiving a milestone is a chained operation. The data for milestones is spread across three tables:- reporting_requirement (base table, common to all reports)- milestone_report (data specific to milestone reports)- payment (payment data, common to some reports)Because this data is spread across three tables we have to remove or archive three form_change records within one transaction, one for each table."
"Not SATD","Deploy cif:mutations/generate_annual_reports to pg"
"Not SATD","setting the start_date to the end of the day to make sure we have the correct date on the front end (the front end is using the end of the day to display the date)"
"Not SATD","Deploy cif:mutations/generate_quarterly_reports to pg"
"Not SATD","choosing the closest quarter start date from a list of possible dates as a temporary table"
"Not SATD","setting the `report_interval_start_date` to the end of the day to make sure we have the correct date on the front end (the front end is using the end of the day to display the date)"
"Not SATD","Deploy cif:mutations/generate_reports to pg"
"Not SATD","Deploy cif:mutations/generate_reports to pg"
"Not SATD","if start date is before or equal to jan 31st, we will start the first annual report on the same year otherwise we will start on the next year"
"Not SATD","choosing the closest quarter start date from a list of possible dates as a temporary table"
"Not SATD","generating the reports"
"Not SATD","Deploy cif:mutations/stage_dirty_form_changes to pg"
"Not SATD","Deploy cif:mutations/stage_form_change to pg"
"Not SATD","Deploy cif:mutations/undo_form_changes to pg"
"Not SATD","Since project revision is the same for all form changes, we can just use the first one"
"Not SATD","we need to treat project overview table differently as it needs a null object as form data"
"Not SATD","Deploy cif:mutations/undo_form_changes to pg"
"Not SATD","Since project revision is the same for all form changes, we can just use the first one"
"Not SATD","we need to treat project overview table differently as it needs a null object as form data"
"Not SATD","Deploy cif:mutations/undo_form_changes to pg"
"Not SATD","Since project revision is the same for all form changes, we can just use the first one"
"Not SATD","we need to treat project overview table differently as it needs a null object as form data"
"Not SATD","Deploy cif:mutations/update_form_change to pg"
"Not SATD","Deploy cif:mutations/update_milestone_form_change to pg"
"Not SATD","remove the totalEligibleExpenses field if the reportType is not General Milestone"
"Not SATD","Deploy cif:mutations/update_milestone_form_change to pg"
"Not SATD","Deploy cif:mutations/update_or_create_user_from_session to pg"
"Not SATD"," This function replaces the old cif.create_user_from_session and updates users based on email (unique in the IDIR realm) instead"
"Not SATD","Deploy cif:mutations/update_or_create_user_from_session to pg"
"Not SATD"," This function replaces the old cif.create_user_from_session and updates users based on email (unique in the IDIR realm) instead"
"Not SATD","Deploy cif:schema/cif to pg"
"Not SATD","Deploy cif:schema/cif_private to pg"
"Not SATD","Deploy cif:tables/additional_funding_source to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/additional_funding_source_status to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/amendment_status to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/amendment_type to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/attachment to pg requires: tables/project_status requires: tables/project"
"Not SATD","Deploy cif:tables/change_status to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/cif_user to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_external permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD","Grant cif_guest permissions"
"Not SATD","Enable row-level security"
"Not SATD","cif_admin RLS"
"Not SATD","cif_internal RLS: can see all users, but can only modify its own record"
"Not SATD","cif_external RLS: can see all users, but can only modify its own record"
"Not SATD","cif_guest RLS: can only see its own (empty) record"
"Not SATD"," Deploy cif:tables/cif_user_001_drop_policies to pg requires: tables/cif_user"
"Not SATD"," Deploy cif:tables/cif_user_002_uuid_to_session_sub to pg requires: tables/cif_user_001_drop_policies requires: tables/cif_user"
"Not SATD","cif_internal RLS: can see all users, but can only modify its own record"
"Not SATD","cif_external RLS: can see all users, but can only modify its own record"
"Not SATD","cif_guest RLS: can only see its own (empty) record"
"Not SATD"," Deploy cif:tables/cif_user_003_create_policies to pg requires: tables/cif_user"
"Not SATD","Allowing all the existing users to update the sub once."
"Not SATD"," Deploy cif:tables/cif_user_004_allow_sub_update_flag to pg requires: tables/cif_user_003_create_policies"
"Not SATD"," Deploy cif:tables/connect_session to pg requires: schemas/private"
"Not SATD","Deploy cif:tables/contact to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/emission_intensity_payment_percent to pg requires: schemas/main"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/emission_intensity_report to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/emission_intensity_report to pg requires: tables/reporting_requirement"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD"," Deploy cif:tables/emission_intensity_report_001 to pg requires: tables/emission_intensity_report"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/form to pg requires: schemas/main"
"Not SATD","note: there is no need to migrate the existing data in the columns, since our prod data deployment step overwrites it every time."
"Not SATD"," Deploy cif:tables/form to pg requires: schemas/main"
"Not SATD","Deploy cif:tables/audit to pg"
"Not SATD","We want the immutable trigger to run first to avoid doing unnecessary work"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD"," Deploy cif:tables/form_change_001 to pg requires: tables/form_change requires: tables/form"
"Not SATD"," Deploy cif:tables/full_backup_log to pg requires: schemas/private"
"Not SATD","Deploy cif:tables/funding_parameter to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/funding_parameter_001 to pg"
"Not SATD"," Deploy cif:tables/funding_parameter_002_add_auto_generating_report_date_columns to pg requires: tables/funding_parameter"
"Not SATD"," Deploy cif:tables/funding_parameter_003_drop_total_project_value_column to pg requires: tables/funding_parameter"
"Not SATD","Deploy cif:tables/funding_stream to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD"," Order is important for funding_stream. EP needs id = 1 and IA needs id = 2 because it's how the business area refers to them and is used to generate unique ids"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD","EP and IA statuses"
"Not SATD","EP Only statuses"
"Not SATD","IA Only statuses"
"Not SATD"," Deploy cif:tables/funding_stream_project_status to pg requires: tables/project_status requires: tables/funding_stream"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD","2018 to 2022 is the MVP year range"
"Not SATD"," Deploy cif:tables/funding_stream_rfp to pg requires: tables/funding_stream"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD","Insert all possible combinations of funding_stream_rfp to project_status"
"Not SATD"," Deploy cif:tables/funding_stream_rfp_project_status to pg requires: tables/funding_stream_rfp requires: tables/project_status"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD"," Deploy cif:tables/funding_stream_rfp_project_status_001_drop_table to pg requires: tables/funding_stream_rfp_project_status"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/milestone_report to pg requires: tables/reporting_requirement"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/operator to pg requires: schemas/main"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/payment to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD"," Deploy cif:tables/payment_001 to pg requires: tables/payment"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/project to pg requires: tables/funding_stream requires: tables/funding_stream_rfp requires: tables/project_status requires: tables/operator"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/project_001 to pg"
"Not SATD","Deploy cif:tables/project_002_add_contract_number to pg"
"Not SATD","Deploy cif:tables/project_003_add_immutable_funding_stream_trigger to pg"
"Not SATD","Deploy cif:tables/project_contact to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/project_manager to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/project_manager_label to pg requires: schemas/main"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/project_revision to pg"
"Not SATD","We want the immutable trigger to run first to avoid doing unnecessary work"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/project_revision_001_add_amendment_columns to pg"
"Not SATD","Deploy cif:tables/project_revision_amendment_type_001_add_delete_permissions to pg"
"Not SATD","Deploy cif:tables/project_revision_003_set_amendment_statuses to pg"
"Not SATD","Deploy cif:tables/project_revision_004_add_pending_actions_from to pg"
"Not SATD"," Deploy cif:tables/project_revision_005_correct_revision_type to pg requires: tables/project_revision_004_add_pending_actions_from"
"Not SATD","The create_project_revision() function was defaulting new revisions to Amendment before we had implemented the abilityto create Amendment revisions. The revisions currently in the system should be of type 'General Revision'"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/project_revision_amendment_type to pg requires: tables/project_revision requires: tables/amendment_type"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/project_status to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Add new project status values"
"Not SATD","Rename project status values"
"Not SATD","delete redundant status values"
"Not SATD"," Deploy cif:tables/project_status_001_update_harcoded_values to pg requires: tables/project_status"
"Not SATD","Deploy cif:tables/project_type to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/reporting_requirement to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/report_type to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:tables/report_type to pg"
"Not SATD"," Deploy cif:tables/report_type_002 to pg requires: tables/report_type_001"
"Not SATD"," Deploy cif:tables/report_type_003 to pg requires: tables/report_type_002"
"Not SATD"," Deploy cif:tables/revision_status to pg requires: tables/amendment_status"
"Not SATD","Deploy cif:tables/revision_type to pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD"," Deploy cif:tables/sector to pg requires: schemas/main"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Deploy cif:trigger_functions/archived_records_are_immutable to pg"
"Not SATD","Deploy cif:trigger_functions/cif_user_session_sub_immutable_with_flag to pg"
"Not SATD","Deploy cif:trigger_functions/committed_changes_are_immutable to pg"
"Not SATD"," Deploy cif:trigger_functions/commit_form_changes to pg requires: schemas/private"
"Not SATD","If there is no change in the form data, return the form_change record and do not touch the associated table."
"Not SATD","If the form has errors set, we don't commit the change and abort the transaction."
"Not SATD","it is necessary to put the values in a row(...) in case there is only one value;"
"Not SATD"," Deploy cif:trigger_functions/commit_form_changes to pg requires: schemas/private"
"Not SATD","Deploy cif:trigger_functions/commit_project_revision to pg"
"Not SATD","Deploy cif:trigger_functions/commit_project_revision to pg"
"Not SATD","If a project_id wasn't created, save it after the form_change row was committed"
"Not SATD"," Propagate the change_status to all related form_change records Save the project table first do avoid foreign key violations from other potential tables."
"Not SATD","Deploy cif:trigger_functions/funding_stream_is_immutable to pg"
"Not SATD","Deploy cif:trigger_functions/operator_swrs_organisation_is_immutable to pg"
"Not SATD"," Deploy cif:trigger_functions/set_previous_form_change_id to pg requires: tables/form_change"
"Not SATD"," Deploy cif:trigger_functions/set_user_id to pg requires: functions/session requires: table/cif_user"
"Not SATD"," Deploy cif:trigger_functions/set_user_id_001_drop_before_cif_user_update to pg requires: trigger_functions/set_user_id"
"Not SATD"," Deploy cif:trigger_functions/set_user_id_002_create_after_cif_user_update to pg requires: trigger_functions/set_user_id_001_drop_before_cif_user_update"
"Not SATD"," Deploy cif:trigger_functions/update_timestamps to pg requires: schemas/private"
"Not SATD"," Deploy cif:trigger_functions/update_timestamps_001_uuid_to_session_sub to pg requires: trigger_functions/update_timestamps"
"Not SATD","Deploy cif:types/form_change_operation to pg"
"Not SATD","Recreating the type with the `sub` field as text"
"Not SATD"," Deploy cif:types/keycloak_jwt to pg requires: schemas/main"
"Not SATD"," Deploy cif:types/keycloak_jwt to pg requires: schemas/main"
"Not SATD"," Deploy cif:types/manager_form_changes_by_label_composite_return to pg requires: schemas/main"
"Not SATD","Deploy cif:types/milestone_report_status_return to pg"
"Not SATD","Deploy cif:types/sum_by_fiscal_year to pg"
"Not SATD","Deploy cif:util_functions/camel_to_snake_case to pg"
"Not SATD","Deploy cif:util_functions/get_fiscal_year_from_timestamp to pg"
"Not SATD","return not started for empty project form"
"Not SATD"," Deploy cif:util_functions/get_form_status to pg requires: tables/form_change"
"Not SATD"," Deploy cif:util_functions/get_form_status to pg requires: tables/form_change"
"Not SATD","Deploy cif:util_functions/get_form_status_001 to pg"
"Not SATD","return not started for empty project form"
"Not SATD","Deploy cif:util_functions/get_form_status_001 to pg"
"Not SATD","return not started for empty project form"
"Not SATD","Deploy cif:util_functions/grant_permissions to pg"
"Not SATD","Grants permission for all columns in a table"
"Not SATD","Grants permissions on specific columns in a table"
"Not SATD","Creates a foreign table and imports the operators from the ggircs database into the operator table in the cif database."
"Not SATD","Create fdw server"
"Not SATD","Create fdw user mapping"
"Not SATD","Create operator foreign table"
"Not SATD","Create report foreign table"
"Not SATD"," Deploy cif:util_functions/import_swrs_operators to pg requires: tables/operator requires: schemas/private"
"Not SATD","Deploy cif:util_functions/import_swrs_operators_from_fdw to pg"
"Not SATD","Upsert the latest organisation data into the cif.operator table if the data has not been changed by a cif user"
"Not SATD"," This functions queries the SWRS tables and commits form_change records to the cif database. It is meant to be used in conjunction to a foreign data wrapper to the SWRS database's operator and report tables."
"Not SATD"," Pick the report from the latest reporting year that was inserted last This applies if there are multiple facilities per organisation The organisation data is expected to be the same for both facilities."
"Not SATD"," if cif_operator is null (new operator) or cif_operator exists and the swrs and cif names are identical (no manual update from the frontend), then we update the cif name."
"Not SATD","Deploy cif:util_functions/import_swrs_operators_from_fdw to pg"
"Not SATD","Upsert the latest organisation data into the cif.operator table if the data has not been changed by a cif user"
"Not SATD"," This functions queries the SWRS tables and commits form_change records to the cif database. It is meant to be used in conjunction to a foreign data wrapper to the SWRS database's operator and report tables."
"Not SATD"," Pick the report from the latest reporting year that was inserted last This applies if there are multiple facilities per organisation The organisation data is expected to be the same for both facilities."
"Not SATD"," if cif_operator is null (new operator) or cif_operator exists and the swrs and cif names are identical (no manual update from the frontend), then we update the cif name."
"Not SATD","Deploy cif:util_functions/read_only_user_policies to pg"
"Not SATD","If policy already exists alter policy, else create a new policy"
"Not SATD","If policy already exists alter policy, else create a new policy"
"Not SATD"," Deploy cif:database_functions/upsert_policy to pg requires: database_functions/create_roles"
"Not SATD"," upsert_policy function with 5 parameters is for select, insert, delete statements and update operations where the using/with check statements are equal example: select cif_private.upsert_policy('test_policy', 'test_table', 'update', 'admin', 'true'); becomes: create policy test_policy on cif.test_table for update to admin using(true) with check(true);"
"Not SATD"," case statement selections for the different operations (select/delete use a 'using' statement) (insert uses a 'with check' statement) (update uses both)"
"Not SATD"," upsert_policy with 6 parameters is for update operations where the using/with check statements are different this version of the function requires 'using' and 'with check' to be defined in the using_statement and check_statement parameters example: select cif_private.upsert_policy('test_policy', 'test_table', 'update', 'admin', 'using(true)', 'with check(false)'); becomes: create policy test_policy on cif.test_table for update to admin using(true) with check(false);"
"Not SATD","Adding the archived_records_are_immutable trigger only with the archived_at column"
"Not SATD"," Deploy cif:util/upsert_timestamp_columns to pg requires: trigger_function/update_timestamps"
"Not SATD","Deploy cif:util_functions/verify_function_not_present to pg"
"Not SATD","Deploy cif:util_functions/verify_function_not_present to pg"
"Not SATD","Verifies permission grants for all columns in a table"
"Not SATD","Verifies permission grants on specific columns in a table"
"Not SATD"," Deploy cif:database_functions/verify_grants to pg requires: schema_cif"
"Not SATD","Verifies if a policy exists"
"Not SATD","Test for valid operation input"
"Not SATD","Parse operation into the appropriate polcmd char in pg_policy table"
"Not SATD","Get the table OID"
"Not SATD","Get the role OID"
"Not SATD","Determine if policy exists with correct policy name, operation, role and table"
"Not SATD","Throw exception if false (necessary for sqitch)"
"Not SATD","Else return true"
"Not SATD"," Deploy cif:database_functions/verify_policy to pg requires: schema_cif"
"Not SATD","Deploy cif:database_functions/verify_policy_not_present to pg"
"Not SATD","Verifies if a policy exists"
"Not SATD","Get the table OID"
"Not SATD","Determine if policy exists with correct policy name, operation, role and table"
"Not SATD","Throw exception if true (necessary for sqitch)"
"Not SATD","Else return true"
"Not SATD","Deploy cif:util_functions/verify_type_not_present to pg"
"Not SATD","Revert cif:create_roles from pg"
"Not SATD"," Deploy cif:computed_columns/full_name to pg requires: tables/cif_user"
"Not SATD","Revert cif:computed_columns/full_name from pg"
"Not SATD","Deploy cif:computed_columns/contact_full_name to pg"
"Not SATD","Revert cif:computed_columns/contact_full_name from pg"
"Not SATD","Revert cif:computed_columns/contact_full_phone from pg"
"Not SATD","Revert cif:computed_columns/contact_pending_form_change from pg"
"Not SATD","Revert cif:computed_columns/contact_pending_form_change_001_drop_before_cif_user_update from pg"
"Not SATD","Revert cif:computed_columns/contact_pending_form_change_002_create_after_cif_user_update from pg"
"Not SATD"," Deploy cif:emission_intensity_report_calculated_ei_performance to pg requires: tables/emission_intensity_report"
"Not SATD","Revert cif:emission_intensity_report_calculated_ei_performance from pg"
"Not SATD"," Deploy cif:emission_intensity_report_calculated_ei_performance to pg requires: tables/emission_intensity_report"
"Not SATD","Deploy cif:computed_columns/form_change_as_emission_intensity_report to pg"
"Not SATD","The revert for the preceding change emission_intensity_report_001 must be done here or the revert for form_change_as_emission_intensity_reportwill not work. It will complain that it is returning too few columns."
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned emission_intensity_report record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD","Revert cif:computed_columns/form_change_as_emission_intensity_report from pg"
"Not SATD"," Deploy cif:computed_columns/form_change_as_project to pg requires: tables/project requires: tables/project_001 requires: tables/form_change"
"Not SATD","The revert for the preceding change project_002_add_contract_number must be done here or the revert for form_change_as_project will not work.It will complain that it is returning too few columns."
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_contact record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD","Revert cif:computed_columns/form_change_as_project from pg"
"Not SATD"," Deploy cif:computed_columns/form_change_as_project to pg requires: tables/project requires: tables/project_001 requires: tables/form_change"
"Not SATD","The revert for the preceding change project_001 must be done here or the revert for form_change_as_project will not work.It will complain that it is returning too few columns."
"Not SATD","Given form_data_record_id can be null for some form_change records, it is not a reliable id value for the returned project_contact record.The returned id must not be null, so we use the form_change id being passed in as a parameter (multiplied by -1 to ensure we are not touching any existing records).This means the id value is not going to be the correct id for the returned project_contact record, which should be ok since we're only interestedin the data in new_form_data."
"Not SATD","Revert cif:computed_columns/form_change_as_project_contact from pg"
"Not SATD","Revert cif:computed_columns/form_change_as_project_manager from pg"
"Not SATD","Revert cif:computed_columns/form_change_as_reporting_requirement from pg"
"Not SATD","Revert cif:computed_columns/form_change_calculated_ei_performance from pg"
"Not SATD","Revert cif:computed_columns/form_change_calculated_gross_amount_this_milestone from pg"
"Not SATD","Revert cif:computed_columns/form_change_calculated_holdback_amount_this_milestone from pg"
"Not SATD","Revert cif:computed_columns/form_change_calculated_net_amount_this_milestone from pg"
"Not SATD","Revert cif:computed_columns/form_change_calculated_total_payment_amount_to_date from pg"
"Not SATD","Revert cif:computed_columns/form_change_eligible_expenses_to_date from pg"
"Not SATD","Revert cif:computed_columns/form_change_gross_payments_to_date from pg"
"Not SATD","Revert cif:computed_columns/form_change_holdback_amount_to_date from pg"
"Not SATD","Revert cif:form_change_is_pristine from pg"
"Not SATD","Revert cif:computed_columns/form_change_is_unique_value from pg"
"Not SATD","Revert cif:computed_columns/form_change_net_payments_to_date from pg"
"Not SATD","Revert cif:functions/form_change_parent_form_change_from_revision from pg"
"Not SATD"," Deploy cif:functions/form_change_payment_percentage to pg requires: tables/form_change requires: computed_columns/emission_intensity_report_calculated_ei_performance 100 ???????? ((-1.5) x GHG Emission Intensity Performance + 145)"
"Not SATD","Revert cif:computed_column/form_change_payment_percentage from pg"
"Not SATD","Revert cif:computed_columns/form_change_reporting_requirement_status from pg"
"Not SATD","Revert cif:computed_columns/operator_pending_form_change from pg"
"Not SATD","Revert cif:computed_columns/operator_pending_form_change_001_drop_before_cif_user_update from pg"
"Not SATD","Revert cif:computed_columns/operator_pending_form_change_002_create_after_cif_user_update from pg"
"Not SATD","Revert cif:computed_columns/project_latest_committed_project_revision from pg"
"Not SATD","Revert cif:computed_columns/project_next_milestone_due_date from pg"
"Not SATD","Revert cif:computed_columns/project_pending_project_revision from pg"
"Not SATD","Revert cif:computed_columns/project_primary_managers from pg"
"Not SATD","Revert cif:computed_columns/project_revision_anticipated_funding_amount_per_fiscal_year from pg"
"Not SATD","Revert cif:computed_columns/project_revision_effective_date from pg"
"Not SATD","Revert cif:computed_columns/project_revision_form_changes_for from pg"
"Not SATD","Revert cif:computed_columns/project_revision_gross_payment_amount from pg"
"Not SATD","Get individual milestone statuses"
"Not SATD"," Deploy cif:computed_columns/project_revision_milestone_report_statuses to pg requires: tables/form_change"
"Not SATD","Revert cif:computed_columns/project_revision_milestone_report_statuses from pg"
"Not SATD","Get individual milestone statuses"
"Not SATD"," Deploy cif:computed_columns/project_revision_milestone_report_statuses to pg requires: tables/form_change"
"Not SATD","Revert cif:computed_columns/project_revision_net_payment_amount from pg"
"Not SATD","Revert cif:computed_columns/project_revision_project_form_change.sql from pg"
"Not SATD"," Deploy cif:computed_columns/project_revision_project_manager_form_changes_by_label to pg requires: tables/form_change requires: tables/project_manager"
"Not SATD","Revert cif:computed_columns/project_revision_project_manager_form_changes_by_label from pg"
"Not SATD","Revert cif:computed_columns/project_revision_rank from pg"
"Not SATD","If we have only another status that is not 'Not Started' and that status is 'Filled' then we are complete"
"Not SATD"," Deploy cif:computed_columns/project_revision_tasklist_status_for to pg requires: util_functions/get_form_status"
"Not SATD","Revert cif:computed_columns/project_revision_tasklist_status_for from pg"
"Not SATD","Revert cif:computed_columns/project_revision_teimp_payment_amount from pg"
"Not SATD","Deploy cif:computed_columns/project_revision_teimp_payment_percentage to pg"
"Not SATD","Revert cif:computed_columns/project_revision_teimp_payment_percentage from pg"
"Not SATD","Revert cif:computed_columns/project_revision_total_project_value from pg"
"Not SATD","Revert cif:computed_columns/project_revision_type_row_number from pg"
"Not SATD","Deploy cif:computed_columns/project_revision_upcoming_reporting_requirement_form_change to pg"
"Not SATD","Revert cif:computed_columns/project_revision_upcoming_reporting_requirement_form_change from pg"
"Not SATD","Revert cif:computed_columns/reporting_requirement_has_expenses from pg"
"Not SATD","Revert cif:data/002_insert_json_schema_form_data_remove_default_from_annual_report_schema from pg"
"Not SATD","No revert required.This is an idempotent data insertion migration.Deleting this data before the cif.form table revert (where we drop the table itself)will likely cause foreign key reference errors."
"Not SATD","Revert cif:data/005_insert_json_schema_form_data_remove_undefined_from_project_contact_schema from pg"
"Not SATD","No revert required."
"Not SATD","Revert cif:data/006_json_schema_project_manager_form_remove_default from pg"
"Not SATD","No revert required."
"Not SATD","Revert cif:migrations/insert_json_schema_form_data from pg"
"Not SATD","No revert required.This is an idempotent data insertion migration.Deleting this data before the cif.form table revert (where we drop the table itself)will likely cause foreign key reference errors."
"Not SATD","Revert cif:data/insert_json_schema_form_data_project_summary from pg"
"Not SATD","No revert required.This is an idempotent data insertion migration.Deleting this data before the cif.form table revert (where we drop the table itself)will likely cause foreign key reference errors."
"Not SATD","Revert cif:data/insert_json_schema_form_data_separate_EP_and_IA_funding_schemas from pg"
"Not SATD","No revert required.This is an idempotent data insertion migration.Deleting this data before the cif.form table revert (where we drop the table itself)will likely cause foreign key reference errors."
"Not SATD","Revert cif:data/insert_json_schema_form_data_update_milestone_form_field_titles from pg"
"Not SATD","No revert required.This is an idempotent data insertion migration.Deleting this data before the cif.form table revert (where we drop the table itself)will likely cause foreign key reference errors."
"Not SATD","Revert cif:data/insert_json_schema_form_dependency_update_milestone_form_total_eligible_expenses from pg"
"Not SATD","No revert required.This is an idempotent data insertion migration.Deleting this data before the cif.form table revert (where we drop the table itself)will likely cause foreign key reference errors."
"Not SATD","Revert cif:functions/funding_form_changes_to_separate_schemas from pg"
"Not SATD","If there is no change in the form data, return the form_change record and do not touch the associated table."
"Not SATD","it is necessary to put the values in a row(...) in case there is only one value;"
"Not SATD"," Deploy cif:functions/handle_default_form_change_commit to pg requires: tables/form_change"
"Not SATD","Revert cif:functions/handle_default_form_change_commit from pg"
"Not SATD","Revert cif:functions/handle_milestone_form_change_commit from pg"
"Not SATD","Revert cif:functions/handle_project_summary_report_form_change_commit from pg"
"Not SATD","Revert cif:functions/migration_milestone_form_changes_to_single_form_change from pg"
"Not SATD","Revert cif:functions/pending_new_form_change_for_table from pg"
"Not SATD","Revert cif:functions/pending_new_form_change_for_table_001_drop_before_cif_user_update from pg"
"Not SATD","Revert cif:functions/pending_new_form_change_for_table_002_create_after_cif_user_update from pg"
"Not SATD","Revert cif:functions/pending_new_project_revision from pg"
"Not SATD","Revert cif:functions/pending_new_project_revision_001_drop_before_cif_user_update from pg"
"Not SATD","Revert cif:functions/pending_new_project_revision_002_create_after_cif_user_update from pg"
"Not SATD","Revert cif:functions/session from pg"
"Not SATD","Revert cif:functions/session_001_drop_function_before_table_update from pg"
"Not SATD","ensure null, empty, and whitespace _sub / idir_userid claims are filtered out"
"Not SATD","unique identifier can never be null"
"Not SATD","Revert cif:functions/session_002_create_function_after_table_update from pg"
"Not SATD","Revert cif:migrations/001_milestone_form_change_to_single_form_change from pg"
"Not SATD","nothing to revert, this is a one-way migration only."
"Not SATD","Revert cif:migrations/002_separate_funding_schemas_for_EP_and_IA from pg"
"Not SATD","no revert"
"Not SATD","Revert cif:mutations/add_additional_funding_source_to_revision from pg"
"Not SATD","Revert cif:mutations/add_contact_to_revision from pg"
"Not SATD"," Deploy cif:mutations/add_emission_intensity_report_to_revision to pg requires: tables/reporting_requirement requires: tables/form_change"
"Not SATD","Adding a emission intensity report to a project_revision is a chained operation. The data for emission is spread across two tables:- reporting_requirement (base table, common to all reports)- emission_intensity_report (data specific to emission intensity reports)Because this data is spread across two tables we have to create two form_change records within one transaction, one for each table."
"Not SATD","Revert cif:mutations/add_emission_intensity_report_to_revision from pg"
"Not SATD"," Deploy cif:mutations/add_milestone_to_revision to pg requires: tables/reporting_requirement requires: tables/form_change"
"Not SATD","Adding a milestone to a project_revision is a chained operation. The data for milestones is spread across three tables:- reporting_requirement (base table, common to all reports)- milestone_report (data specific to milestone reports)- payment (payment data, common to some reports)Because this data is spread across three tables we have to create three form_change records within one transaction, one for each table."
"Not SATD","Revert cif:mutations/add_milestone_to_revision from pg"
"Not SATD","Revert cif:mutations/commit_form_change from pg"
"Not SATD","Deploy cif:mutations/commit_form_change to pg"
"SATD","TODO : add a conditional behaviour based on fc.form_id"
"Not SATD","Revert cif:mutations/commit_form_change from pg"
"Not SATD","Deploy cif:mutations/commit_project_revision to pg"
"Not SATD","defer FK constraints check to the end of the transaction"
"Not SATD"," Propagate the change_status to all related form_change records Save the project table first to avoid foreign key violations from other potential tables."
"Not SATD","Deploy cif:mutations/commit_project_revision to pg"
"Not SATD","Revert cif:mutations/create_form_change from pg"
"Not SATD","project_id is null until the project is created"
"Not SATD"," Deploy cif:mutations/create_project to pg requires: tables/project"
"Not SATD"," Deploy cif:mutations/create_project to pg requires: tables/project"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","don't need to order before limiting or further filter because funding stream is immutable and will be the same in all form changes"
"Not SATD","don't need to order before limiting or further filter because funding stream is immutable and will be the same in all form changes"
"Not SATD","Revert cif:mutations/create_project_revision from pg"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","Revert cif:mutations/create_project_revision to pg"
"Not SATD","Revert cif:mutations/create_project_revision from pg"
"Not SATD","Revert cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","Deploy cif:mutations/create_project_revision to pg"
"Not SATD","non-milestone reporting requirements"
"Not SATD","milestone reporting requirements"
"Not SATD","Revert ggircs-app:mutations/create_user_from_session from pg"
"Not SATD","Revert cif:mutations/create_user_from_session_001_drop_before_cif_user_update from pg"
"Not SATD","Revert cif:mutations/create_user_from_session_002_create_after_cif_user_update from pg"
"Not SATD","Deploy cif:mutations/delete_project_revision to pg"
"Not SATD","Deploy cif:mutations/delete_project_revision to pg"
"Not SATD","Revert cif:mutations/discard_additional_funding_source_form_change from pg"
"Not SATD","Revert cif:mutations/discard_emission_intensity_report from pg"
"Not SATD"," Deploy cif:mutations/discard_funding_parameter_form_change to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD","Removing or archiving a funding_parameter is a chained operation. The data for funding_parameter is spread across two tables:- reporting_requirement (base table, common to all reports)- funding_parameter (data specific to parameter_form)Because this data is spread across two tables we have to remove or archive two form_change records within one transaction, one for each table."
"Not SATD","Revert cif:mutations/discard_funding_parameter_form_change from pg"
"Not SATD"," Deploy cif:mutations/discard_milestone_form_change to pg requires: tables/form_change requires: tables/project_revision"
"Not SATD","Removing or archiving a milestone is a chained operation. The data for milestones is spread across three tables:- reporting_requirement (base table, common to all reports)- milestone_report (data specific to milestone reports)- payment (payment data, common to some reports)Because this data is spread across three tables we have to remove or archive three form_change records within one transaction, one for each table."
"Not SATD","Revert cif:mutations/discard_milestone_form_change from pg"
"Not SATD","Revert cif:mutations/generate_annual_reports from pg"
"Not SATD","Revert cif:mutations/generate_quarterly_reports from pg"
"Not SATD","Deploy cif:mutations/generate_reports to pg"
"Not SATD","if start date is before or equal to jan 31st, we will start the first annual report on the same year otherwise we will start on the next year"
"Not SATD","choosing the closest quarter start date from a list of possible dates as a temporary table"
"Not SATD","generating the reports"
"Not SATD","Revert cif:mutations/generate_reports from pg"
"Not SATD","Revert cif:mutations/stage_dirty_form_changes from pg"
"Not SATD","Revert cif:mutations/stage_form_change from pg"
"Not SATD","Deploy cif:mutations/undo_form_changes to pg"
"Not SATD","Since project revision is the same for all form changes, we can just use the first one"
"Not SATD","we need to treat project overview table differently as it needs a null object as form data"
"Not SATD","Revert cif:mutations/undo_form_changes from pg"
"Not SATD","Deploy cif:mutations/undo_form_changes to pg"
"Not SATD","Since project revision is the same for all form changes, we can just use the first one"
"Not SATD","we need to treat project overview table differently as it needs a null object as form data"
"Not SATD","Revert cif:mutations/update_form_change from pg"
"Not SATD","Deploy cif:mutations/update_milestone_form_change to pg"
"Not SATD","Revert cif:mutations/update_milestone_form_change from pg"
"Not SATD","Deploy cif:mutations/update_or_create_user_from_session to pg"
"Not SATD"," This function replaces the old cif.create_user_from_session and updates users based on email (unique in the IDIR realm) instead"
"Not SATD","Revert cif:mutations/update_or_create_user_from_session from pg"
"Not SATD","Revert cif:schema/cif from pg"
"Not SATD","Revert cif:schema/cif_private from pg"
"Not SATD","Revert cif:tables/additional_funding_source from pg"
"Not SATD","Revert cif:tables/additional_funding_source_status from pg"
"Not SATD","Revert cif:tables/amendment_status from pg"
"Not SATD","Revert cif:tables/amendment_type from pg"
"Not SATD","Revert cif:tables/attachment from pg"
"Not SATD","Revert cif:tables/change_status from pg"
"Not SATD","Revert cif:tables/cif_user on pg"
"Not SATD","Revert cif:tables/cif_user_001_drop_policies from pg"
"Not SATD","cif_internal RLS: can see all users, but can only modify its own record"
"Not SATD","cif_external RLS: can see all users, but can only modify its own record"
"Not SATD","cif_guest RLS: can only see its own (empty) record"
"Not SATD","Revert cif:tables/cif_user_002_uuid_to_session_sub from pg"
"Not SATD","Revert cif:tables/cif_user_003_create_policies from pg"
"Not SATD","Revert cif:tables/cif_user_004_allow_sub_update_flag from pg"
"Not SATD","Revert cif:tables/connect_session on pg"
"Not SATD","Revert cif:tables/contact from pg"
"Not SATD","Revert cif:tables/emission_intensity_payment_percent from pg"
"Not SATD","Revert cif:tables/emission_intensity_report from pg"
"Not SATD","Revert cif:tables/emission_intensity_report_001 from pg"
"Not SATD","The revert for emission_intensity_report_001 should already have been run in computed_columns/form_change_as_project as the columns need to bedropped for the function to properly be reverted. This revert will only be called in a development context where sqitchonly got deployed to emission_intensity_report_001."
"Not SATD","Revert cif:tables/form from pg"
"Not SATD"," Deploy cif:tables/form to pg requires: schemas/main"
"Not SATD"," No revert. Cannot change varchar back to regprocedure without error. Table will be dropped in original revert file."
"Not SATD","Revert cif:tables/audit from pg"
"Not SATD","Revert cif:tables/form_change_001 from pg"
"Not SATD","Revert cif:tables/full_backup_log from pg"
"Not SATD","Revert cif:tables/funding_parameter from pg"
"Not SATD","Revert cif:tables/funding_parameter_001 from pg"
"Not SATD","Revert cif:tables/funding_parameter_002_add_auto_generating_report_date_columns from pg"
"Not SATD","Revert cif:tables/funding_parameter_003_drop_total_project_value_column from pg"
"Not SATD","Revert cif:tables/funding_stream from pg"
"Not SATD","Revert cif:tables/funding_stream_project_status from pg"
"Not SATD","Revert cif:tables/funding_stream_rfp from pg"
"Not SATD","Revert cif:tables/funding_stream_rfp_project_status from pg"
"Not SATD","Revert cif:tables/funding_stream_rfp_project_status_001_drop_table from pg"
"Not SATD","Grant cif_internal permissions"
"Not SATD","Grant cif_admin permissions"
"Not SATD","Insert all possible combinations of funding_stream_rfp to project_status"
"Not SATD"," Grant cif_external no permissions Grant cif_guest no permissions"
"Not SATD","Revert cif:tables/milestone_report from pg"
"Not SATD","Revert cif:tables/operator from pg"
"Not SATD","Revert cif:tables/payment from pg"
"Not SATD","Revert cif:tables/payment_001 from pg"
"Not SATD","Revert cif:tables/project from pg"
"Not SATD","Revert cif:tables/project_001 from pg"
"Not SATD","The revert for project_001 should already have been run in computed_columns/form_change_as_project as the columns need to bedropped for the function to properly be reverted. This revert will only be called in a development context where sqitchonly got deployed to project_001."
"Not SATD","Revert cif:tables/project_002_add_contract_number from pg"
"Not SATD","Revert cif:tables/project_003_add_immutable_funding_stream_trigger from pg"
"Not SATD","Revert cif:tables/project_contact from pg"
"Not SATD","Revert cif:tables/project_manager from pg"
"Not SATD","Revert cif:tables/project_manager_label from pg"
"Not SATD","Revert cif:tables/project_revision from pg"
"Not SATD","Revert cif:tables/project_revision_001_add_amendment_columns from pg"
"Not SATD","Revert cif:tables/project_revision_amendment_type_001_add_delete_permissions from pg"
"Not SATD","Revert cif:tables/project_revision_003_set_amendment_statuses from pg"
"Not SATD","Revert cif:tables/project_revision_004_add_pending_actions_from from pg"
"Not SATD","Revert cif:tables/project_revision_005_correct_revision_type from pg"
"Not SATD","one-way migration, no revert necessary."
"Not SATD","Revert cif:tables/project_revision_amendment_type from pg"
"Not SATD","Revert cif:tables/project_status from pg"
"Not SATD","Revert cif:tables/project_status_001_update_harcoded_values from pg"
"Not SATD","Add existing project status values"
"Not SATD","Rename project status values back to previous values"
"Not SATD","delete new status values"
"Not SATD","Revert cif:tables/project_type from pg"
"Not SATD","Revert cif:tables/reporting_requirement from pg"
"Not SATD","Revert cif:tables/report_type from pg"
"Not SATD","Deploy cif:tables/report_type to pg"
"Not SATD","Revert cif:tables/report_type_002 from pg"
"Not SATD","Revert cif:tables/report_type_003 from pg"
"Not SATD","Revert cif:tables/revision_status from pg"
"Not SATD","Revert cif:tables/revision_type from pg"
"Not SATD","Revert cif:tables/sector from pg"
"Not SATD","Revert cif:trigger_functions/archived_records_are_immutable from pg"
"Not SATD","Revert cif:trigger_functions/cif_user_session_sub_immutable_with_flag from pg"
"Not SATD","Revert cif:trigger_functions/committed_changes_are_immutable from pg"
"Not SATD","If there is no change in the form data, return the form_change record and do not touch the associated table."
"Not SATD","If the form has errors set, we don't commit the change and abort the transaction."
"Not SATD","it is necessary to put the values in a row(...) in case there is only one value;"
"Not SATD"," Deploy cif:trigger_functions/commit_form_changes to pg requires: schemas/private"
"Not SATD","Revert cif:trigger_functions/commit_form_changes from pg"
"Not SATD","Deploy cif:trigger_functions/commit_project_revision to pg"
"Not SATD","If a project_id wasn't created, save it after the form_change row was committed"
"Not SATD"," Propagate the change_status to all related form_change records Save the project table first do avoid foreign key violations from other potential tables."
"Not SATD","Revert cif:trigger_functions/commit_project_revision from pg"
"Not SATD","Revert cif:trigger_functions/funding_stream_is_immutable from pg"
"Not SATD","Revert cif:trigger_functions/operator_swrs_organisation_is_immutable from pg"
"Not SATD","Revert cif:trigger_functions/set_previous_form_change_id from pg"
"Not SATD","Revert cif:trigger_functions/set_user_id from pg"
"Not SATD","Revert cif:trigger_functions/set_user_id_001_drop_before_cif_user_update from pg"
"Not SATD","Revert cif:trigger_functions/set_user_id_002_create_after_cif_user_update from pg"
"Not SATD","Revert cif:trigger_functions/update_timestamps from pg"
"Not SATD","Revert cif:trigger_functions/update_timestamps_001_uuid_to_session_sub from pg"
"Not SATD","Revert cif:types/form_change_operation from pg"
"Not SATD"," Deploy cif:types/keycloak_jwt to pg requires: schemas/main"
"Not SATD","Revert cif:types/keycloak_jwt from pg"
"Not SATD","Revert cif:types/manager_form_changes_by_label_composite_return from pg"
"Not SATD","Revert cif:types/milestone_report_status_return from pg"
"Not SATD","Revert cif:types/sum_by_fiscal_year from pg"
"Not SATD","Revert cif:util_functions/camel_to_snake_case from pg"
"Not SATD","Revert cif:util_functions/get_fiscal_year_from_timestamp from pg"
"Not SATD"," Deploy cif:util_functions/get_form_status to pg requires: tables/form_change"
"Not SATD","Revert cif:util_functions/get_form_status from pg"
"Not SATD","Deploy cif:util_functions/get_form_status_001 to pg"
"Not SATD","return not started for empty project form"
"Not SATD","Revert cif:util_functions/get_form_status_001 from pg"
"Not SATD","Revert cif:util_functions/grant_permissions from pg"
"Not SATD","Revert cif:util_functions/import_swrs_operators from pg"
"Not SATD","Deploy cif:util_functions/import_swrs_operators_from_fdw to pg"
"Not SATD","Upsert the latest organisation data into the cif.operator table if the data has not been changed by a cif user"
"Not SATD"," This functions queries the SWRS tables and commits form_change records to the cif database. It is meant to be used in conjunction to a foreign data wrapper to the SWRS database's operator and report tables."
"Not SATD"," Pick the report from the latest reporting year that was inserted last This applies if there are multiple facilities per organisation The organisation data is expected to be the same for both facilities."
"Not SATD"," if cif_operator is null (new operator) or cif_operator exists and the swrs and cif names are identical (no manual update from the frontend), then we update the cif name."
"Not SATD","Revert cif:util_functions/import_swrs_operators_from_fdw from pg"
"Not SATD","Revert cif:util_functions/read_only_user_policies from pg"
"Not SATD","Revert cif:util_functions/upsert_policy from pg"
"Not SATD","Revert cif:util_functions/upsert_timestamp_columns from pg"
"Not SATD","Deploy cif:util_functions/verify_function_not_present to pg"
"Not SATD","Revert cif:util_functions/verify_function_not_present from pg"
"Not SATD","Revert cif:util_functions/verify_grant from pg"
"Not SATD","Revert cif:util_functions/verify_policy from pg"
"Not SATD","Revert cif:util_functions/verify_policy_not_present from pg"
"Not SATD","Revert cif:util_functions/verify_type_not_present from pg"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","TEST SETUP"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","make sure the function exists"
"Not SATD","create an inital form_change record"
"Not SATD","TEST SETUP"
"Not SATD","END SETUP"
"Not SATD","should return 100 if payment percentage is very large (over 100%)"
"Not SATD","should return 0 if payment percentage is negative"
"SATD","200.00,"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","Late"
"Not SATD","On track"
"Not SATD","Completed"
"Not SATD","Null"
"Not SATD","TEST SETUP"
"Not SATD","END SETUP"
"Not SATD","mock datacreate mock projectcreate mock project revisioncreate mock report typecreate mock reporting requirement (several)test cases:start with submitted reporting requirement (no upcoming), test that that's what we get backadd an upcoming reporting requirement, test that that's what we get back (coalesce should give back this one if it exists)add several upcoming reports, make sure we get the next one-> use create project in create project revision functions rather than inserts"
"Not SATD","Create mock user"
"Not SATD","Create mock operator"
"Not SATD","Create mock project"
"Not SATD","Create mock report type"
"Not SATD","Create mock reporting requirement"
"Not SATD","create three projects"
"Not SATD","project 1, milestone 1, 2021/2022 (date sent to csnr), calculated gross"
"Not SATD","project 1, milestone 2, 2021/2022 (date sent to csnr), adjusted gross"
"Not SATD","project 1, milestone 3, 2024/2025 (submittedDate), adjusted gross"
"Not SATD","project 1, milestone 4, 2024/2025 (dateSentToCsnr), archived"
"Not SATD","project 2, milestone 1, 2021/2022 (due date)"
"Not SATD","project 2, milestone 2, 2023/2024 (date sent to csnr)"
"Not SATD","project 3, milestone 1, null"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","Change the updated_at values for the project revisions"
"Not SATD","This form is a decoy to make sure we test the json filtering"
"Not SATD","TEST SETUP"
"Not SATD","END SETUP"
"SATD","TODO: Implement this as part of #986"
"Not SATD","Stage form changes"
"Not SATD","Add errors"
"Not SATD","Create new form_change records & link them the the previous records"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"SATD","TODO: Implement this as part of #986"
"Not SATD","don't show all the truncate messages"
"Not SATD","Create 3 records in revision 1 (committed) non-archived label ids: 1,2,3"
"Not SATD","Archive a record and update a record in revision 2 (committed) non-archived label ids:: 2,3"
"Not SATD","Create a record, update a record and archive a record in revision 3 (pending) non-archived label ids: 2,4"
"Not SATD","Create a record in a different project (committed)"
"Not SATD","Create a record in a different project (pending)"
"Not SATD","Commit / Update Revisions as user 1."
"Not SATD","Ensure the updated_at timestamps make sense (Not all are updated at the same time, group and stagger the updates by revision)"
"Not SATD","Basic Setup: Entities needed by dependency"
"Not SATD","Basic Setup End"
"Not SATD","Create form_change records for testing.There are 12 form_change records in total.9 form_change records are for project with id = 1There are 3 revisions within these 10 form_change records.The flow is:Revision id=1 (committed):create 3 recordsRevision id=2 (committed):delete 1 record created in revision 1update 1 record created in revision 1(one update is an unchanged record from revision 1)Revision id=3 (pending) - This pending revision is the main focus of the tests:create 1 recorddelete 1 recordupdate 1 recordThere are 2 revisions for project with id = 2These are here to make sure that the function does not return any form_change records for projects outside the scope of the project_revision passed as a parameter.Revision id=4 is committedRevision id=5 is pending"
"Not SATD","What form_change data should be returned for each manager label record in revision 3:1 Label: null (archived in revision 2)2 Label: '{""projectId"": 1, ""cifUserId"": 1, ""projectManagerLabelId"": 2}' - (updated in revision 3)3 Label: null (archived in revision 3)4 Label: '{""projectId"": 1, ""cifUserId"": 2, ""projectManagerLabelId"": 4}' - (created by user 2 in revision 3 AFTER user 1 created it in the same revision)"
"Not SATD","TESTS"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","previous form change"
"Not SATD","pending, is_pristine = true"
"Not SATD","staged, no validation errors"
"Not SATD","previous form change"
"Not SATD","pending, is_pristine = true"
"Not SATD","staged, no validation errors"
"Not SATD","pending, is_pristine = true"
"Not SATD","staged, no validation errors"
"Not SATD","-------------------- Without Json Matching ---------------------- */"
"Not SATD","Change new_form_data to make is_pristine = false"
"Not SATD","Add validation_errors"
"Not SATD","it returns null when the table argument is null"
"Not SATD","it returns Not Started when there are no form_change records and the is_first_revision is true"
"Not SATD","-------------------- With Json Matching ---------------------- */"
"Not SATD","Change new_form_data to make is_pristine = false"
"Not SATD","Add validation_errors"
"Not SATD","Mock cif.get_form_status() to return 'Attention Required' and another status to ensure 'Attention Required' gets the highest priority."
"Not SATD"," These forms are a decoy to make sure we test the json filtering They should not be taken in account when computing the status with the json_matcher previous form change"
"Not SATD","TEST SETUP"
"Not SATD","END SETUP"
"Not SATD","---------------------- Without Json Matching ----------------------"
"Not SATD","---------------------- With Json Matching ----------------------"
"Not SATD","mock functions"
"Not SATD","Test Case: 0.75 * (123600.78 - 100100.78) = 375"
"Not SATD","Setup"
"Not SATD","The containing reporting requirement"
"Not SATD","One emission intensity report"
"Not SATD","Doesn't blow up if we divide by zero"
"Not SATD","Doesn't blow up if data is missing"
"Not SATD","only takes in account non-archiving form_changes (operation not archive)"
"Not SATD"," returns the right value if performance is integer between 30 and 100 ((30-20) / (30-10))*100 = 50%"
"Not SATD"," returns the right value if performance is fractional between 30 and 100 ((30-19) / (30-15))*100 = 73.33..%"
"Not SATD"," returns the right value if performance is below 30 ((30-29) / (30-15))*100 = 6.66..%"
"Not SATD"," returns the right value if performance is above 100 ((30-29) / (30-15))*100 = 6.66..%"
"Not SATD"," Uses the adjusted emissions intensity performance if set 43% emissions performance means 20% payment"
"Not SATD","funding parameter without max funding amount and proponent cost"
"Not SATD","funding parameter with max funding amount, proponent cost and additional funding sources"
"Not SATD","funding parameter with max funding amount and proponent cost but no additional funding sources"
"Not SATD","adding additional funding sources"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","returns the earliest form_change without a submitted_date when no report_type is specified"
"Not SATD","returns the earliest form_change of that type without a submitted_date when the report_type is specified"
"Not SATD","returns null when all reports of that type are submitted and the report_type is specified"
"Not SATD","returns null when no form_changes are present"
"Not SATD","returns null when all reports have been submitted and no report_type is specified"
"Not SATD","returns null when no form_changes are present"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","test setup"
"Not SATD","add funding parameter form as we already removed it from the schema by a previous migration but this is needed for the test and fixing the migration"
"Not SATD","add funding parameter form_change records"
"Not SATD","test setup ends"
"SATD"," EP 2019 EP 2020 EP 2021 IA 2021 IA 2022"
"Not SATD","setting a form change record"
"Not SATD","make sure the function exists"
"Not SATD","function creates a table record"
"Not SATD","doesnt insert if the data is missing required fields"
"Not SATD","inserts with default value if data is missing"
"Not SATD","Does not throw with empty data & returns the form_data_record_id of the form_change parameter passed in"
"Not SATD","setting up pending change without specifying the record id"
"Not SATD","setting up pending change without specifying the record id"
"Not SATD","Function does not error when form_data object contains keys that are not columns in the target table (deprecated columns)"
"Not SATD"," set client_min_messages to debug; archive test"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","reporting_requiement table"
"Not SATD","milestone_report table"
"Not SATD","payment table"
"Not SATD","The next three tests confirm that the correct values were added to their three corresponsing tables when the form_change operation is ""update"""
"Not SATD","reporting_requiement table"
"Not SATD","milestone_report table"
"Not SATD","payment table"
"Not SATD","SETUP"
"Not SATD","SETUP END"
"Not SATD","The next three tests confirm that the correct values were added to their three corresponsing tables (reporting_requirement, milestone_report, & payment)after performing the commit, when the form_change operation is ""create"""
"Not SATD","reporting_requiement table"
"Not SATD","payment table"
"Not SATD","reporting_requiement table"
"Not SATD","payment table"
"Not SATD","SETUP"
"Not SATD","some of these fields are unnecessary eg. emission_intensity and milestone"
"Not SATD","SETUP END"
"Not SATD","The next two tests confirm that the correct values were added to their corresponding tables (reporting_requirement & payment)after performing the commit, when the form_change operation is ""create"""
"Not SATD","The next two tests confirm that the correct values were added to their two corresponding tables (reporting_requirement & payment)after performing the commit, when the form_change operation is ""update"""
"Not SATD","Test Setup --"
"Not SATD","first project with no data - and no expenses"
"Not SATD","second project with all the data - and expenses"
"Not SATD","An existing reporting requirement, different from a milestone"
"Not SATD","We can't use the cif.create_project_revision() function since it is already updated with the new milestone schema, so we create the form_changes manually."
"Not SATD","End Test Setup --"
"Not SATD","it transforms the existing form_change for the reporting_requirement into the new format"
"Not SATD","it doesn't touch the form changes not in a revision"
"Not SATD","it doesn't touch the reporting requirement form changes that are not for the General, Advanced or Reporting milestones."
"Not SATD"," A separate form change without a revision that should be left untouched even if it makes little sense, context-wise"
"Not SATD"," At this point, we have 3 revisions: One committed (id=1) and one pending (id=3) for the project_id=1 with the milestone form_change ids being 3 and 12 One pending (id=2) for the project_id=2 with the milestone form_change id being 6"
"Not SATD"," it takes the milestone data from existing revisions and puts them into the new json schema for committed form changes for pending form changes"
"Not SATD"," It is idempotent We re-run the first 3 tests to make sure nothing has changed"
"Not SATD","reset time to now();"
"Not SATD","restart the id sequences"
"Not SATD","fill the forms and commit the current project revision"
"Not SATD","A deleted revision is not returned"
"Not SATD","it inserts a new record"
"Not SATD","it returns the newly inserted record"
"Not SATD","it inserts a new record"
"Not SATD","it returns the newly inserted record with the"
"Not SATD","Test Setup"
"Not SATD","it inserts a new record"
"Not SATD","it returns two form_change records, one for each of the reporting_requirement and emission_intensity_report tables."
"Not SATD","Commit the form_change records to populate the related tables with data"
"Not SATD","setting a form change record"
"Not SATD","make sure the function exists"
"Not SATD","Calls the proper function set in the form table"
"Not SATD","SETUP"
"Not SATD","Returns the committed form_change record"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","make sure the function exists"
"Not SATD","make sure project_revision has a null project id"
"Not SATD","call the mutation that sets values"
"Not SATD","make sure project_revision has a project id equal to the one that was in the form"
"Not SATD","make sure project_contact has a project id equal to the one that was in the form"
"Not SATD","Delete the project form_change to create a broken foreign key constraint"
"Not SATD","Check revision_status is correctly applied"
"Not SATD"," propagates the status change to all form changes no matter what make sure project_revision and form changes are created with change status 'pending'"
"Not SATD","BEGIN SETUP"
"Not SATD","END SETUP"
"Not SATD","Create a second set of records to check our deferred constraints"
"Not SATD","create an update for our comitted project, but don't commit it yet"
"Not SATD","restart the id sequences"
"Not SATD","restart the id sequences"
"Not SATD","creating a second project to test the sequences"
"Not SATD"," This test calls the create_project(funding_stream_rpf_id integer) function, effects will be tested in the following tests"
"Not SATD","restart the id sequences"
"Not SATD","adding additional funding sources"
"Not SATD","to discard a form change with update operation"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","Test Setup"
"Not SATD","TEST SETUP"
"Not SATD","Returns the updated form_change record"
"Not SATD","Sets the change_status to 'staged'"
"Not SATD","It only updates the new_form_data, validation_errors and operation fields"
"Not SATD","previous form change"
"Not SATD","we are calling the function once with an array of form_change_ids"
"Not SATD","TEST SETUP"
"Not SATD","END SETUP"
"Not SATD","It returns the updated record"
"Not SATD","It sets the change_status to pending every time"
"Not SATD","It only updates the new_form_data, validation_errors and operation fields"
"Not SATD","It returns the updated record with the proper calculated value for gross amount"
"Not SATD","It returns the updated record with the proper calculated value for gross amount"
"Not SATD","It returns the updated record with the proper calculated value for holdback amount"
"Not SATD","It returns the updated record with the proper adjusted value for gross amount"
"Not SATD","It returns the updated record with the proper calculated value for net amount when gross amount is adjusted"
"Not SATD","It returns the updated record with the proper calculated value for holdback amount when gross amount is adjusted"
"Not SATD","It properly updates form data other than calculated values"
"Not SATD","It makes the total eligible expenses null when report type is not general milestone"
"Not SATD","It populates the total eligible expenses with the correct value when report type is general milestone"
"Not SATD","It updates the total eligible expenses with the correct value when updating the total eligible expenses field"
"Not SATD","SETUP"
"Not SATD","END SETUP"
"Not SATD","Returns the user that was created"
"Not SATD","Adds a user if the email doesn't exist in the system"
"Not SATD","Updates the sub if the email already exists and we allow the sub update, and disallows sub update from then on"
"Not SATD","Throws if we try to change the sub on a user that doesn't have the flag set"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"SATD","TODO add testing for attachment table"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Try to update user data where session_sub does not match"
"Not SATD","cif_external"
"Not SATD","Try to update user data where session_sub does not match"
"Not SATD","cif_guest"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Trigger tests --"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","test EP and IA statuses"
"Not SATD","test EP only statuses"
"Not SATD","test IA only statuses"
"Not SATD","Test setup"
"Not SATD","need to truncate the table before testing insert/update stuff"
"Not SATD","cif_admin"
"Not SATD","to check unique constraint"
"Not SATD","cif_internal"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup --"
"Not SATD","disable blocking triggers"
"Not SATD","set different statuses for testing"
"Not SATD","set database to pre-migration state"
"Not SATD","perform migration"
"Not SATD","END SETUP"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup --"
"Not SATD","Trigger tests --"
"Not SATD","test project_revision_001_add_revision_type"
"Not SATD","use the contents of the revert file to set the database to a state where revision_type isn't required"
"Not SATD","deploy the project_revision_001_add_revision_type migration"
"Not SATD","Test Setup"
"Not SATD","Row level security tests --"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","11 project types + project type added in earlier test = 12"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","5 because 'Approved' was removed"
"Not SATD","Test setup"
"Not SATD","set jwt.claims.sub to '11111111-1111-1111-1111-111111111111';"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Test setup"
"Not SATD","cif_admin"
"Not SATD","cif_internal"
"Not SATD","Testing table with a archived_at column"
"Not SATD","make sure the function exists"
"Not SATD","create an inital form_change record"
"Not SATD","Commit the initial form_change"
"Not SATD","Create a set of pending form_change records"
"Not SATD","Commit the pending form_change records"
"Not SATD","Create a set of form_change records for a new revision"
"Not SATD","TEST SETUP"
"Not SATD","END SETUP"
"Not SATD","attemp to update the user_id to a different user"
"Not SATD","Init test"
"Not SATD","Sets created_at/by on insert when all columns exist"
"Not SATD","Sets updated_at/by on update when all columns exist"
"Not SATD","Sets archived_by on update when archived_at is changed"
"Not SATD","Trigger does not error on insert when no created_at/by columns exist"
"Not SATD","Trigger does not error on update when no updated_at/by columns exist"
"Not SATD","Daylight savings in 2021 was Mar 14 - Nov 7"
"Not SATD","test 1"
"Not SATD","test 2"
"Not SATD","test 3"
"Not SATD","test 4"
"Not SATD","test 5"
"Not SATD","test 6"
"Not SATD","Test setup"
"Not SATD","Manually update data & run the import function again"
"Not SATD","updating the foreign data, renaming an operator"
"Not SATD","For this test, some setup was done in schema/data/test_setup/external_database_setup.sqlThe data inserted in this file looks like this:insert into swrs.report(id, swrs_organisation_id, reporting_period_duration)values(1, 1, 2019),(2, 1, 2020),(3, 2, 2020),(4, 3, 2020);insert into swrs.organisation(id, report_id, swrs_organisation_id, business_legal_name, english_trade_name)values(1, 1, 1, '2019 legal name 1', '2019 legal name 1'),(2, 2, 1, '2020 legal name 1', '2020 trade name 1'),(3, 3, 2, '2020 legal name 2', '2020 trade name 2'),(4, 4, 3, '2020 legal name 3', '2020 trade name 3');"
"Not SATD","Test setup"
"Not SATD","created_*, updated_*, deleted_* columns exist"
"Not SATD","*_by columns are foreign keys"
"Not SATD","Indices exist"
"Not SATD","triggers are added"
"Not SATD","Passes when should pass"
"Not SATD","Throws when should throw"
"Not SATD","Passes when should pass"
"Not SATD","Throws when should throw"
"Not SATD","Passes when should pass"
"Not SATD","Throws when should throw"
"Not SATD","Verify cif:create_roles on pg"
"Not SATD","Verify cif:computed_columns/contact_full_name on pg"
"Not SATD","Verify cif:computed_columns/contact_full_name on pg"
"Not SATD","Verify cif:computed_columns/contact_full_name on pg"
"Not SATD","Verify cif:computed_columns/contact_full_name on pg"
"Not SATD","Verify cif:computed_columns/contact_full_phone on pg"
"Not SATD","Verify cif:computed_columns/contact_pending_form_change on pg"
"Not SATD","Verify cif:computed_columns/contact_pending_form_change_001_drop_before_cif_user_update on pg"
"Not SATD","Verify cif:computed_columns/contact_pending_form_change_002_create_after_cif_user_update on pg"
"Not SATD","Verify cif:emission_intensity_report_calculated_ei_performance on pg"
"Not SATD","Verify cif:emission_intensity_report_calculated_ei_performance on pg"
"Not SATD","Verify cif:emission_intensity_report_calculated_ei_performance on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_emission_intensity_report on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_emission_intensity_report on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_project on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_project on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_project on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_project_contact on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_project_manager on pg"
"Not SATD","Verify cif:computed_columns/form_change_as_reporting_requirement on pg"
"Not SATD","Verify cif:computed_columns/form_change_calculated_ei_performance on pg"
"Not SATD","Verify cif:computed_columns/form_change_calculated_gross_amount_this_milestone on pg"
"Not SATD","Verify cif:computed_columns/form_change_calculated_holdback_amount_this_milestone on pg"
"Not SATD","Verify cif:computed_columns/form_change_calculated_net_amount_this_milestone on pg"
"Not SATD","Verify cif:computed_columns/form_change_calculated_total_payment_amount_to_date on pg"
"Not SATD","Verify cif:computed_columns/form_change_eligible_expenses_to_date on pg"
"Not SATD","Verify cif:computed_columns/form_change_gross_payments_to_date on pg"
"Not SATD","Verify cif:computed_columns/form_change_holdback_amount_to_date on pg"
"Not SATD","Verify cif:form_change_is_pristine on pg"
"Not SATD","Verify cif:computed_columns/form_change_is_unique_value on pg"
"Not SATD","Verify cif:computed_columns/form_change_net_payments_to_date on pg"
"Not SATD","Verify cif:functions/form_change_parent_form_change_from_revision on pg"
"Not SATD","Verify cif:computed_column/form_change_payment_percentage on pg"
"Not SATD","Verify cif:computed_column/form_change_payment_percentage on pg"
"Not SATD","Verify cif:computed_columns/form_change_reporting_requirement_status on pg"
"Not SATD","Verify cif:computed_columns/operator_pending_form_change on pg"
"Not SATD","Verify cif:computed_columns/operator_pending_form_change_001_drop_before_cif_user_update on pg"
"Not SATD","Verify cif:computed_columns/operator_pending_form_change_002_create_after_cif_user_update on pg"
"Not SATD","Verify cif:computed_columns/project_latest_committed_project_revision on pg"
"Not SATD","Verify cif:computed_columns/project_next_milestone_due_date on pg"
"Not SATD","Verify cif:computed_columns/project_pending_project_revision on pg"
"Not SATD","Verify cif:computed_columns/project_primary_managers on pg"
"Not SATD","Verify cif:computed_columns/project_revision_anticipated_funding_amount_per_fiscal_year on pg"
"Not SATD","Verify cif:computed_columns/project_revision_effective_date on pg"
"Not SATD","Verify cif:computed_columns/project_revision_form_changes_for on pg"
"Not SATD","Verify cif:computed_columns/project_revision_gross_payment_amount on pg"
"Not SATD","Verify cif:computed_columns/project_revision_milestone_report_statuses on pg"
"Not SATD","Verify cif:computed_columns/project_revision_milestone_report_statuses on pg"
"Not SATD","Verify cif:computed_columns/project_revision_milestone_report_statuses on pg"
"Not SATD","Verify cif:computed_columns/project_revision_net_payment_amount on pg"
"Not SATD","Verify cif:computed_columns/project_revision_project_form_change.sql on pg"
"Not SATD","Verify cif:computed_columns/project_revision_project_manager_form_changes_by_label on pg"
"Not SATD","Verify cif:computed_columns/project_revision_project_manager_form_changes_by_label on pg"
"Not SATD","Verify cif:computed_columns/project_revision_rank on pg"
"Not SATD","Verify cif:computed_columns/project_revision_tasklist_status_for on pg"
"Not SATD","Verify cif:computed_columns/project_revision_tasklist_status_for on pg"
"Not SATD","Verify cif:computed_columns/project_revision_teimp_payment_amount on pg"
"Not SATD","Verify cif:computed_columns/project_revision_teimp_payment_percentage on pg"
"Not SATD","Verify cif:computed_columns/project_revision_teimp_payment_percentage on pg"
"Not SATD","Verify cif:computed_columns/project_revision_total_project_value on pg"
"Not SATD","Verify cif:computed_columns/project_revision_type_row_number on pg"
"Not SATD","Verify cif:computed_columns/project_revision_upcoming_reporting_requirement_form_change on pg"
"Not SATD","Verify cif:computed_columns/project_revision_upcoming_reporting_requirement_form_change on pg"
"Not SATD","Verify cif:computed_columns/reporting_requirement_has_expenses on pg"
"Not SATD","Verify cif:data/002_insert_json_schema_form_data_remove_default_from_annual_report_schema on pg"
"Not SATD","Verify cif:data/005_insert_json_schema_form_data_remove_undefined_from_project_contact_schema on pg"
"Not SATD","Verify cif:data/006_json_schema_project_manager_form_remove_default on pg"
"Not SATD","Verify cif:migrations/insert_json_schema_form_data on pg"
"Not SATD","Verify cif:data/insert_json_schema_form_data_project_summary on pg"
"Not SATD","Verify cif:data/insert_json_schema_form_data_separate_EP_and_IA_funding_schemas on pg"
"Not SATD","Verify cif:data/insert_json_schema_form_data_update_milestone_form_field_titles on pg"
"Not SATD","Verify cif:data/insert_json_schema_form_dependency_update_milestone_form_total_eligible_expenses on pg"
"Not SATD","Verify cif:functions/funding_form_changes_to_separate_schemas on pg"
"Not SATD","Verify cif:functions/handle_default_form_change_commit on pg"
"Not SATD","Verify cif:functions/handle_default_form_change_commit on pg"
"Not SATD","Verify cif:functions/handle_milestone_form_change_commit on pg"
"Not SATD","Verify cif:functions/handle_project_summary_report_form_change_commit on pg"
"Not SATD","Verify cif:functions/migration_milestone_form_changes_to_single_form_change on pg"
"Not SATD","Verify cif:functions/pending_new_form_change_for_table on pg"
"Not SATD","Verify cif:functions/pending_new_form_change_for_table_001_drop_before_cif_user_update on pg"
"Not SATD","Verify cif:functions/pending_new_form_change_for_table_002_create_after_cif_user_update on pg"
"Not SATD","Verify cif:functions/pending_new_project_revision on pg"
"Not SATD","Verify cif:functions/pending_new_project_revision_001_drop_before_cif_user_update on pg"
"Not SATD","Verify cif:functions/pending_new_project_revision_002_create_after_cif_user_update on pg"
"Not SATD","Verify cif:functions/session on pg"
"Not SATD","Verify cif:functions/session_001_drop_function_before_table_update on pg"
"Not SATD","Verify cif:functions/session_002_create_function_after_table_update on pg"
"Not SATD","Verify cif:migrations/001_milestone_form_changes_to_single_form_change on pg"
"Not SATD","If the migration has been applied, there are no form_changes for milestone_report or payment tables that are not archived."
"Not SATD","Verify cif:migrations/002_separate_funding_schemas_for_EP_and_IA on pg"
"Not SATD","Verify cif:mutations/add_additional_funding_source_to_revision on pg"
"Not SATD","Verify cif:mutations/add_contact_to_revision on pg"
"Not SATD","Verify cif:mutations/add_emission_intensity_report_to_revision on pg"
"Not SATD","Verify cif:mutations/add_emission_intensity_report_to_revision on pg"
"Not SATD","Verify cif:mutations/add_milestone_to_revision on pg"
"Not SATD","Verify cif:mutations/add_milestone_to_revision on pg"
"Not SATD","Verify cif:mutations/commit_form_change on pg"
"Not SATD","Verify cif:mutations/commit_form_change on pg"
"Not SATD","Verify cif:mutations/commit_form_change on pg"
"Not SATD","Verify cif:mutations/commit_project_revision on pg"
"Not SATD","Verify cif:mutations/commit_project_revision on pg"
"Not SATD","Verify cif:mutations/create_form_change on pg"
"Not SATD","Verify cif:mutations/create_project on pg"
"Not SATD","Verify cif:mutations/create_project on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify cif:mutations/create_project_revision on pg"
"Not SATD","Verify ggircs-app:mutations/create_user_from_session on pg"
"Not SATD","Verify cif:mutations/create_user_from_session_001_drop_before_cif_user_update on pg"
"Not SATD","Verify cif:mutations/create_user_from_session_002_create_after_cif_user_update on pg"
"Not SATD","Verify cif:mutations/delete_project_revision on pg"
"Not SATD","Verify cif:mutations/delete_project_revision on pg"
"Not SATD","Verify cif:mutations/discard_additional_funding_source_form_change on pg"
"Not SATD","Verify cif:mutations/discard_emission_intensity_report on pg"
"Not SATD","Verify cif:mutations/discard_funding_parameter_form_change on pg"
"Not SATD","Verify cif:mutations/discard_funding_parameter_form_change on pg"
"Not SATD","Verify cif:mutations/discard_milestone_form_change on pg"
"Not SATD","Verify cif:mutations/discard_milestone_form_change on pg"
"Not SATD","Verify cif:mutations/generate_annual_reports on pg"
"Not SATD","Verify cif:mutations/generate_quarterly_reports on pg"
"Not SATD","Verify cif:mutations/generate_reports on pg"
"Not SATD","Verify cif:mutations/generate_reports on pg"
"Not SATD","Verify cif:mutations/stage_dirty_form_changes on pg"
"Not SATD","Verify cif:mutations/stage_form_change on pg"
"Not SATD","Verify cif:mutations/undo_form_changes on pg"
"Not SATD","Verify cif:mutations/undo_form_changes on pg"
"Not SATD","Verify cif:mutations/undo_form_changes on pg"
"Not SATD","Verify cif:mutations/update_form_change on pg"
"Not SATD","Verify cif:mutations/update_milestone_form_change on pg"
"Not SATD","Verify cif:mutations/update_milestone_form_change on pg"
"Not SATD","Verify cif:mutations/update_or_create_user_from_session on pg"
"Not SATD","Verify cif:mutations/update_or_create_user_from_session on pg"
"Not SATD","Verify cif:schema/cif on pg"
"Not SATD","Verify cif:schema/cif_private on pg"
"Not SATD","Verify cif:tables/additional_funding_source on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/additional_funding_source_status on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/amendment_status on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/amendment_type on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/attachment on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/change_status on pg"
"Not SATD","Verify cif:tables/cif_user on pg"
"Not SATD","cif_admin Grants"
"Not SATD","cif_admin Grants"
"Not SATD","cif_admin Grants"
"Not SATD","cif_guest grant"
"Not SATD","Verify cif:tables/cif_user_001_drop_policies on pg"
"Not SATD","Verify cif:tables/cif_user_002_uuid_to_session_sub on pg"
"Not SATD","Verify cif:tables/cif_user_003_create_policies on pg"
"Not SATD","Verify cif:tables/cif_user_004_allow_sub_update_flag on pg"
"Not SATD","Verify cif:tables/connect_session on pg"
"Not SATD","Verify cif:tables/contact on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/emission_intensity_payment_percent on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/emission_intensity_report on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/emission_intensity_report_001 on pg"
"Not SATD","Verify cif:tables/form on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/form on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/audit on pg"
"Not SATD","Verify cif:tables/form_change_001 on pg"
"Not SATD","Verify cif:tables/full_backup_log on pg"
"Not SATD","Verify cif:tables/funding_parameter on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/funding_parameter_001 on pg"
"Not SATD","Verify cif:tables/funding_parameter_002_add_auto_generating_report_date_columns on pg"
"Not SATD","Verify cif:tables/funding_parameter_003_drop_total_project_value_column on pg"
"Not SATD","Verify cif:tables/funding_stream on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/funding_stream_project_status on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/funding_stream_rfp on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/funding_stream_rfp_project_status_project_status on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/funding_stream_rfp_project_status_001_drop_table on pg"
"Not SATD","Verify cif:tables/milestone_report on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/operator on pg"
"Not SATD","Verify cif:tables/payment_001 on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_001 on pg"
"Not SATD","Verify cif:tables/project_002_add_contract_number on pg"
"Not SATD","Verify cif:tables/project_003_add_immutable_funding_stream_trigger on pg"
"Not SATD","Verify cif:tables/project_contact on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_manager on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_manager_label on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_revision on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_revision_001_add_amendment_columns on pg"
"Not SATD","Verify cif:tables/project_revision_amendment_type_001_add_delete_permissions on pg"
"Not SATD","Verify cif:tables/project_revision_003_set_amendment_statuses on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_revision_004_add_pending_actions_from on pg"
"Not SATD","Verify cif:tables/project_revision_amendment_type on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_status on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/project_status_001_update_harcoded_values on pg"
"Not SATD","check all new values are present"
"Not SATD","check all old values are gone"
"Not SATD","Verify cif:tables/project_type on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/reporting_requirement on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/report_type on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/report_type_002 on pg"
"Not SATD","Verify cif:tables/report_type_003 on pg"
"Not SATD","Verify cif:tables/revision_status on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/revision_type on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:tables/sector on pg"
"Not SATD","cif_internal Grants"
"Not SATD","cif_admin Grants"
"Not SATD","Verify cif:trigger_functions/archived_records_are_immutable on pg"
"Not SATD","Verify cif:trigger_functions/cif_user_session_sub_immutable_with_flag on pg"
"Not SATD","Verify cif:trigger_functions/committed_changes_are_immutable on pg"
"Not SATD","Verify cif:trigger_functions/commit_form_changes on pg"
"Not SATD","Verify cif:trigger_functions/commit_form_changes on pg"
"Not SATD","Verify cif:trigger_functions/commit_project_revision on pg"
"Not SATD","Verify cif:trigger_functions/commit_project_revision on pg"
"Not SATD","Verify cif:trigger_functions/funding_stream_is_immutable on pg"
"Not SATD","Verify cif:trigger_functions/operator_swrs_organisation_is_immutable on pg"
"Not SATD","Verify cif:trigger_functions/set_previous_form_change_id on pg"
"Not SATD","Verify cif:function_set_user_id on pg"
"Not SATD","Verify cif:trigger_functions/set_user_id_001_drop_before_cif_user_update on pg"
"Not SATD","Verify cif:trigger_functions/set_user_id_002_create_after_cif_user_update on pg"
"Not SATD","Verify cif:function_update_timestamps on pg"
"Not SATD","Verify cif:trigger_functions/update_timestamps_001_uuid_to_session_sub on pg"
"Not SATD","Verify cif:types/form_change_operation on pg"
"Not SATD","Verify cif:type_keycloak_jwt on pg"
"Not SATD","Verify cif:type_keycloak_jwt on pg"
"Not SATD","Verify cif:types/manager_form_changes_by_label_composite_return on pg"
"Not SATD","Verify cif:types/milestone_report_status_return on pg"
"Not SATD","Verify cif:types/sum_by_fiscal_year on pg"
"Not SATD","Verify cif:util_functions/camel_to_snake_case on pg"
"Not SATD","Verify cif:util_functions/get_fiscal_year_from_timestamp on pg"
"Not SATD","Verify cif:util_functions/get_form_status on pg"
"Not SATD","Verify cif:util_functions/get_form_status on pg"
"Not SATD","Verify cif:util_functions/get_form_status_001 on pg"
"Not SATD","Verify cif:util_functions/get_form_status_001 on pg"
"Not SATD","Verify cif:database_functions/grant_permissions on pg"
"Not SATD","Verify cif:util_functions/import_swrs_operators on pg"
"Not SATD","Verify cif:util_functions/import_swrs_operators_from_fdw on pg"
"Not SATD","Verify cif:util_functions/import_swrs_operators_from_fdw on pg"
"Not SATD","Verify cif:database_functions/read_only_user_policies on pg"
"Not SATD","Verify cif:database_functions/upsert_policy on pg"
"Not SATD","Verify cif:database_functions/upsert_timestamp_columns on pg"
"Not SATD","Verify cif:util_functions/verify_function_not_present on pg"
"Not SATD","Verify cif:util_functions/verify_function_not_present on pg"
"Not SATD","Verify cif:database_functions/verify_grants on pg"
"Not SATD","Verify cif:database_functions/verify_policy on pg"
"Not SATD","Verify cif:database_functions/verify_policy_not_present on pg"
"Not SATD","Verify cif:database_functions/verify_type_not_present on pg"
